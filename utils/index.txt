// == 扫描摘要 ==
//
// 跳过的目录 (共 4 个):
//   - ..\src\novel
//   - ..\src\settings
//   - ..\src\types
//   - ..\src\ui\novel
//
// == 文件内容 ==

// =
// 文件: ..\src\App.vue
//

<template>
  <router-view />
</template>

<style>

body {
  background-color: #f5f5f7;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

::-webkit-scrollbar {
  display: none;
}
</style>

// =
// 文件: ..\src\home.vue
//

<template>
  <div class="flex-1 px-8 py-6 overflow-auto bg-[#FCFCFC] hide-scrollbar">
    <div class="mb-8">
      <h2 class="text-2xl font-light text-[#374151] mb-2">欢迎回来</h2>
      <p class="text-[#6B7280]">今天想创作什么内容？</p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
      <div v-for="stat in stats" :key="stat.label" class="bg-white rounded-xl p-6 border border-gray-100">
        <div class="flex items-center justify-between mb-4">
          <div class="w-10 h-10 bg-[#F3F4F6] rounded-lg flex items-center justify-center" v-html="stat.icon"></div>
          <span class="text-xs font-medium px-2 py-1 rounded-md" :class="stat.trendClass">{{ stat.trend }}</span>
        </div>
        <p class="text-2xl font-light text-[#374151]">{{ stat.value }}</p>
        <p class="text-sm text-[#9CA3AF] mt-1">{{ stat.label }}</p>
      </div>
    </div>

    <div class="mb-8">
      <h3 class="text-base font-medium text-[#374151] mb-4">快速开始</h3>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <button v-for="action in quickStartActions" :key="action.title" class="bg-white rounded-xl p-6 border border-gray-100 hover:border-gray-200 transition-all hover:shadow-sm text-left group">
          <div class="w-12 h-12 rounded-xl flex items-center justify-center mb-4 group-hover:scale-105 transition-transform" :class="action.iconBgClass">
            <span v-html="action.icon" class="w-6 h-6"></span>
          </div>
          <h4 class="font-medium text-[#374151] mb-1">{{ action.title }}</h4>
          <p class="text-sm text-[#9CA3AF]">{{ action.description }}</p>
        </button>
      </div>
    </div>

    <div>
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-base font-medium text-[#374151]">最近项目</h3>
        <button class="text-sm text-[#6B7280] hover:text-[#374151] transition-colors">查看全部 →</button>
      </div>
      <div class="space-y-3">
        <div v-for="project in recentProjects" :key="project.title" class="bg-white rounded-xl p-5 border border-gray-100 hover:border-gray-200 transition-all hover:shadow-sm flex items-center gap-4">
          <div class="w-14 h-14 rounded-lg flex-shrink-0" :class="project.bgClass"></div>
          <div class="flex-1">
            <h4 class="font-medium text-[#374151]">{{ project.title }}</h4>
            <p class="text-sm text-[#9CA3AF] mt-1">{{ project.details }}</p>
          </div>
          <div class="flex items-center gap-2">
            <span class="w-2 h-2 rounded-full" :class="project.status === '编辑中' ? 'bg-[#10B981]' : 'bg-[#9CA3AF]'"></span>
            <span class="text-sm text-[#9CA3AF]">{{ project.status }}</span>
          </div>
          <button class="px-4 py-2 bg-white border border-gray-200 rounded-lg text-sm font-medium text-[#374151] hover:bg-gray-50 transition-colors">
            继续
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const stats = ref([
  { label: '作品总数', value: '24', trend: '+12%', trendClass: 'text-[#10B981] bg-green-50', icon: `<svg class="w-5 h-5 text-[#4B5563]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="5" y="3" width="14" height="18" rx="2"/><path d="M9 7H15M9 11H15M9 15H13"/></svg>` },
  { label: '总字数', value: '128.5k', trend: '+8%', trendClass: 'text-[#10B981] bg-green-50', icon: `<svg class="w-5 h-5 text-[#4B5563]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 20L12 10"/><path d="M18 20L18 4"/><path d="M6 20L6 16"/></svg>` },
  { label: 'AI 使用次数', value: '856', trend: '进行中', trendClass: 'text-[#3B82F6] bg-blue-50', icon: `<svg class="w-5 h-5 text-[#4B5563]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"/><path d="M12 6V12L16 16"/></svg>` },
  { label: '获得赞赏', value: '342', trend: '+24', trendClass: 'text-[#10B981] bg-green-50', icon: `<svg class="w-5 h-5 text-[#4B5563]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M20.84 4.61C20.3 4.07 19.5 3.87 18.75 4.12L5.23 8.62C4.34 8.91 3.75 9.76 3.75 10.72C3.75 11.68 4.34 12.53 5.23 12.82L10.5 14.53L12.21 19.8C12.5 20.69 13.35 21.28 14.31 21.28C15.27 21.28 16.12 20.69 16.41 19.8L20.91 6.28C21.16 5.53 20.96 4.73 20.42 4.19L20.84 4.61Z"/></svg>` },
]);

const quickStartActions = ref([
  { title: '创建新作品', description: '开始全新的创作之旅', icon: `<svg class="text-white" stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24"><path d="M12 5V19M5 12H19"/></svg>`, iconBgClass: 'bg-[#4B5563]' },
  { title: 'AI 助手', description: '智能创作伴侣', icon: `<svg class="text-[#4B5563]" stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24"><path d="M13 2L3 14H12L11 22L21 10H12L13 2Z"/></svg>`, iconBgClass: 'bg-[#F3F4F6]' },
  { title: '导入文档', description: '继续未完成的创作', icon: `<svg class="text-[#4B5563]" stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24"><path d="M7 18C4.5 18 3 16.5 3 14C3 11.5 5 10 7 10C7.3 10 7.5 10 7.8 10.1C8.5 7.2 11 5 14 5C17.3 5 20 7.7 20 11C20 11.3 20 11.7 19.9 12C21.1 12.5 22 13.6 22 15C22 16.9 20.4 18.5 18.5 18.5"/><path d="M12 13V21M15 16L12 13L9 16"/></svg>`, iconBgClass: 'bg-[#F3F4F6]' }
]);

const recentProjects = ref([
  { title: '星际漫游者', details: '科幻冒险 · 24章 · 2小时前', status: '编辑中', bgClass: 'bg-gradient-to-br from-indigo-100 to-purple-100' },
  { title: '月光下的约定', details: '现代言情 · 18章 · 昨天', status: '暂停', bgClass: 'bg-gradient-to-br from-pink-100 to-rose-100' }
]);
</script>

// =
// 文件: ..\src\layouts\DefaultLayout.vue
//

<template>
  <div class="h-screen w-screen flex bg-white design-frame-container">
    <div class="design-frame">
      <div class="h-10 px-5 flex items-center border-b border-gray-100 bg-gray-50 flex-shrink-0">
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 rounded-full bg-[#FF5F57]"></div>
          <div class="w-3 h-3 rounded-full bg-[#FFBD2E]"></div>
          <div class="w-3 h-3 rounded-full bg-[#28CA42]"></div>
        </div>
        <div class="ml-auto flex items-center gap-4 text-xs text-gray-400">
          <span>AI Creator Platform</span>
        </div>
      </div>
      <div class="h-[calc(100%-40px)] flex">
        <AppSidebar />
        <main class="flex-1 bg-white flex flex-col">
          <AppHeader />
          <router-view />
        </main>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import AppSidebar from '@/layouts/components/AppSidebar.vue'
import AppHeader from '@/layouts/components/AppHeader.vue'
</script>

<style scoped>
.design-frame-container {
  padding: 2rem;
  background-color: #f5f5f7;
}
.design-frame {
  width: 100%;
  height: 100%;
  max-width: 1800px;
  margin: auto;
  background: white;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.08);
}
</style>

// =
// 文件: ..\src\layouts\components\AppHeader.vue
//

<template>
  <header class="h-20 px-8 flex items-center justify-between border-b border-gray-100 flex-shrink-0 bg-white">
    <div class="flex items-center gap-8">
      <h1 class="text-lg font-medium text-[#374151]">{{ route.meta.title || 'AI Creator Platform' }}</h1>
    </div>
    <div class="flex items-center gap-2">
      <button class="p-2 hover:bg-gray-50 rounded-lg transition-colors">
        <svg
            class="w-5 h-5 text-[#6B7280]"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
        >
          <circle cx="11" cy="11" r="8" />
          <path d="M21 21L16.65 16.65" />
        </svg>
      </button>
      <button class="p-2 hover:bg-gray-50 rounded-lg transition-colors relative">
        <svg
            class="w-5 h-5 text-[#6B7280]"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            viewBox="0 0 24 24"
        >
          <path d="M18 8A6 6 0 0 0 6 8C6 15 3 17 3 17H21C21 17 18 15 18 8Z" />
          <path d="M13.73 21C13.5 21.6 12.8 22 12 22C11.2 22 10.5 21.6 10.27 21" />
        </svg>
        <span class="absolute top-1.5 right-1.5 w-2 h-2 bg-red-500 rounded-full"></span>
      </button>
      <div class="ml-4 flex items-center gap-3">
        <div class="w-9 h-9 bg-gray-200 rounded-full"></div>
        <div>
          <p class="text-sm font-medium text-[#374151]">张小明</p>
          <p class="text-xs text-[#9CA3AF]">免费版</p>
        </div>
      </div>
    </div>
  </header>
</template>

<script setup lang="ts">
import { useRoute } from 'vue-router'
const route = useRoute()
</script>

// =
// 文件: ..\src\layouts\components\AppSidebar.vue
//

<!-- src/layouts/components/AppSidebar.vue -->
<template>
  <aside class="w-64 bg-[#FAFAFA] border-r border-gray-100 flex flex-col flex-shrink-0">
    <!-- 侧边栏头部区域 -->
    <div class="p-4 space-y-4 border-b border-gray-100">
      <div class="flex items-center gap-3 px-2">
        <div class="w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center flex-shrink-0">
          <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path></svg>
        </div>
        <div>
          <h3 class="font-medium text-[#374151] text-sm">AI Creator</h3>
          <p class="text-xs text-[#9CA3AF]">创作平台</p>
        </div>
      </div>
    </div>

    <!-- 主导航 -->
    <nav class="flex-1 px-4 py-6">
      <div class="mb-8">
        <p class="text-xs font-medium text-[#9CA3AF] px-3 mb-3 uppercase tracking-wider">主要功能</p>
        <div class="space-y-1">
          <router-link v-for="item in mainNav" :key="item.name" :to="item.path" class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors" active-class="bg-[#4B5563] text-white font-medium">
            <span v-html="item.icon"></span>
            <span>{{ item.name }}</span>
          </router-link>
        </div>
      </div>

      <div>
        <p class="text-xs font-medium text-[#9CA3AF] px-3 mb-3 uppercase tracking-wider">工具</p>
        <div class="space-y-1">
          <div v-for="item in toolsNav" :key="item.name" class="flex items-center gap-3 px-3 py-2.5 text-gray-400 rounded-lg text-sm cursor-not-allowed">
            <span v-html="item.icon"></span>
            <span>{{ item.name }}</span>
          </div>
        </div>
      </div>
    </nav>

    <!-- 底部设置 -->
    <div class="p-4 border-t border-gray-100 mt-auto">
      <router-link to="/settings" class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="3"/><path d="M12 1V6M12 18V23M4.22 4.22L7.76 7.76M16.24 16.24L19.78 19.78M1 12H6M18 12H23M4.22 19.78L7.76 16.24M16.24 7.76L19.78 4.22"/></svg>
        <span>设置</span>
      </router-link>
    </div>
  </aside>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const mainNav = ref([
  { name: '工作台', path: '/home', icon: `<svg class="w-5 h-5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><rect x="3" y="3" width="7" height="7" rx="1.5"/><rect x="14" y="3" width="7" height="7" rx="1.5"/><rect x="3" y="14" width="7" height="7" rx="1.5"/><rect x="14" y="14" width="7" height="7" rx="1.5"/></svg>`},
  { name: '创作中心', path: '/novel', icon: `<svg class="w-5 h-5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path d="M12 2L2 7L12 12L22 7L12 2Z"/><path d="M2 17L12 22L22 17"/><path d="M2 12L12 17L22 12"/></svg>`},
  { name: '角色扮演', path: '/roleplay', icon: `<svg class="w-5 h-5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path d="M20 21V18C20 16.3 19.3 14.8 18.2 13.7C17.1 12.6 15.6 12 14 12H10C8.4 12 6.9 12.6 5.8 13.7C4.7 14.8 4 16.3 4 18V21"/><circle cx="12" cy="7" r="4"/></svg>`}
]);

const toolsNav = ref([
  { name: '工作流', path: '#', icon: `<svg class="w-5 h-5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path d="M9 3V15M9 15L5 11M9 15L13 11"/><path d="M15 21V9M15 9L19 13M15 9L11 13"/></svg>` },
  { name: '提示词库', path: '#', icon: `<svg class="w-5 h-5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><rect x="3" y="3" width="18" height="18" rx="2"/><path d="M8 12H16"/></svg>`}
]);
</script>

<style scoped>
.router-link-exact-active {
  color: white !important;
}
</style>


// =
// 文件: ..\src\main.ts
//

import { createApp } from 'vue'
import { createPinia } from 'pinia'


import './styles/main.css'

import App from './App.vue'
import router from './router'

const app = createApp(App)

app.use(createPinia())
app.use(router)

app.mount('#app')

// =
// 文件: ..\src\router\index.ts
//

// src/router/index.ts
import { createRouter, createWebHistory, type RouteRecordRaw } from 'vue-router'
import DefaultLayout from '@/layouts/DefaultLayout.vue'
import { settingsRoutes } from '@/settings/router'
import {novelRoutes} from "@novel/router.ts";

const routes: Array<RouteRecordRaw> = [
    {
        path: '/',
        redirect: '/home',
    },
    {
        path: '/home',
        component: DefaultLayout,
        children: [
            {
                path: '',
                name: 'home',
                component: () => import('@/home.vue'),
                meta: { title: '工作台' },
            },
        ],
    },
    ...novelRoutes,
    {
        path: '/settings',
        component: () => import('@/settings/layouts/SettingsLayout.vue'),
        redirect: '/settings/user',
        children: settingsRoutes,
    },
    {
        path: '/vip',
        name: 'VipPlan',
        component: () => import('@/settings/views/Vip.vue'),
    },
]

const router = createRouter({
    history: createWebHistory(import.meta.env.BASE_URL),
    routes,
    scrollBehavior(to, from, savedPosition) {
        if (savedPosition) {
            return savedPosition
        } else {
            return { top: 0 }
        }
    },
})

export default router

// =
// 文件: ..\src\styles\main.css
//

@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  background-color: #F5F5F7;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
::-webkit-scrollbar-track {
  background: #f1f1f1;
}
::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}
::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.hide-scrollbar {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

