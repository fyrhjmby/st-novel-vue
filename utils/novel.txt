// == 扫描摘要 ==
//
// == 文件内容 ==

// =
// 文件: ..\src\novel\components\AIAssistantMenu.vue
//

// =
// 文件: ..\src\novel\components\AIAssistantMenu.vue
// 说明: 新增组件，用于实现点击全局AI按钮后弹出的任务菜单，对应 ed.html UI稿。
//

<template>
  <!-- 菜单卡片容器 -->
  <div class="w-80 bg-white rounded-xl shadow-2xl overflow-hidden border border-gray-100">
    <!-- 顶部标题栏 -->
    <div class="bg-gradient-to-r from-[#4B5563] to-[#374151] text-white p-5 flex items-center justify-between">
      <div class="flex items-center gap-3">
        <div class="w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.43 2.43c-1.105 0-2.023-.918-2.023-2.023a3.75 3.75 0 013.75-3.75c.916 0 1.749.312 2.422.845l.005.004a.75.75 0 01.017 1.056l-1.06 1.06c-.24.24-.407.553-.407.896v.113a.75.75 0 001.5 0v-.058a1.5 1.5 0 01.447-1.087l.16-.16a1.5 1.5 0 00-2.122-2.122l-.16.16a1.5 1.5 0 01-1.087.447h-.058a.75.75 0 000 1.5h.113c.343 0 .656-.167.896-.407l1.06-1.06a.75.75 0 011.056.017z" /><path stroke-linecap="round" stroke-linejoin="round" d="M16.47 8.53a.75.75 0 011.06 0l3.75 3.75a.75.75 0 010 1.06l-3.75 3.75a.75.75 0 11-1.06-1.06l2.47-2.47H3a.75.75 0 010-1.5h15.94l-2.47-2.47a.75.75 0 010-1.06z" /></svg>
        </div>
        <div>
          <h3 class="font-medium">AI 助手</h3>
          <p class="text-xs text-white/80">智能创作伴侣</p>
        </div>
      </div>
      <button class="w-8 h-8 hover:bg-white/10 rounded-lg flex items-center justify-center transition-colors">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M6 18L18 6M6 6l12 12"></path></svg>
      </button>
    </div>

    <!-- 任务列表 -->
    <div class="p-6 space-y-4 max-h-96 overflow-y-auto">
      <div>
        <p class="text-xs font-medium text-[#9CA3AF] uppercase tracking-wider mb-3">生成任务</p>
        <div class="space-y-2">
          <a href="#" class="flex items-center gap-3 p-3 rounded-lg hover:bg-[#F3F4F6] transition-colors group">
            <div class="w-10 h-10 bg-[#F3F4F6] text-[#4B5563] rounded-lg flex items-center justify-center group-hover:bg-[#4B5563] group-hover:text-white transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" /></svg>
            </div>
            <div class="flex-1">
              <p class="font-medium text-sm text-[#374151]">章节生成</p>
              <p class="text-xs text-[#9CA3AF]">根据大纲创建新章节</p>
            </div>
            <svg class="w-4 h-4 text-[#9CA3AF] group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg>
          </a>

          <a href="#" class="flex items-center gap-3 p-3 rounded-lg hover:bg-[#F3F4F6] transition-colors group">
            <div class="w-10 h-10 bg-[#F3F4F6] text-[#4B5563] rounded-lg flex items-center justify-center group-hover:bg-[#4B5563] group-hover:text-white transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.43 2.43c-1.105 0-2.023-.918-2.023-2.023a3.75 3.75 0 013.75-3.75c.916 0 1.749.312 2.422.845l.005.004a.75.75 0 01.017 1.056l-1.06 1.06c-.24.24-.407.553-.407.896v.113a.75.75 0 001.5 0v-.058a1.5 1.5 0 01.447-1.087l.16-.16a1.5 1.5 0 00-2.122-2.122l-.16.16a1.5 1.5 0 01-1.087.447h-.058a.75.75 0 000 1.5h.113c.343 0 .656-.167.896-.407l1.06-1.06a.75.75 0 011.056.017z" /></svg>
            </div>
            <div class="flex-1">
              <p class="font-medium text-sm text-[#374151]">章节润色</p>
              <p class="text-xs text-[#9CA3AF]">优化文字表达和风格</p>
            </div>
            <svg class="w-4 h-4 text-[#9CA3AF] group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg>
          </a>
        </div>
      </div>

      <div>
        <p class="text-xs font-medium text-[#9CA3AF] uppercase tracking-wider mb-3">分析任务</p>
        <div class="space-y-2">
          <a href="#" class="flex items-center gap-3 p-3 rounded-lg hover:bg-[#F3F4F6] transition-colors group">
            <div class="w-10 h-10 bg-[#F3F4F6] text-[#4B5563] rounded-lg flex items-center justify-center group-hover:bg-[#4B5563] group-hover:text-white transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6a7.5 7.5 0 100 15 7.5 7.5 0 000-15zM21 21l-5.197-5.197" /></svg>
            </div>
            <div class="flex-1">
              <p class="font-medium text-sm text-[#374151]">章节分析</p>
              <p class="text-xs text-[#9CA3AF]">分析情节和人物</p>
            </div>
            <svg class="w-4 h-4 text-[#9CA3AF] group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg>
          </a>

          <a href="#" class="flex items-center gap-3 p-3 rounded-lg hover:bg-[#F3F4F6] transition-colors group">
            <div class="w-10 h-10 bg-[#F3F4F6] text-[#4B5563] rounded-lg flex items-center justify-center group-hover:bg-[#4B5563] group-hover:text-white transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1.125-1.5M13.5 16.5L12 21m-1.5-4.5L9 16.5" /></svg>
            </div>
            <div class="flex-1">
              <p class="font-medium text-sm text-[#374151]">阶段分析</p>
              <p class="text-xs text-[#9CA3AF]">评估故事节奏和结构</p>
            </div>
            <svg class="w-4 h-4 text-[#9CA3AF] group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg>
          </a>
        </div>
      </div>
    </div>

    <!-- 底部聊天入口 -->
    <div class="border-t border-gray-100 p-4 bg-[#FAFAFA]">
      <button class="w-full flex items-center justify-center gap-2 px-4 py-2 bg-[#4B5563] text-white rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227l.173.013h9.24a2.708 2.708 0 002.707-3.227V6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.01z"></path></svg>
        AI 聊天助手
      </button>
    </div>
  </div>
</template>

<script setup lang="ts">
// Component logic will be added here
</script>

<style scoped>
/* Scoped styles can be added here if needed */
</style>

// =
// 文件: ..\src\novel\components\AITaskConfigModal.vue
//

// =
// 文件: ..\src\novel\components\AITaskConfigModal.vue
// 说明: 新增组件，用于AI任务的配置模态框，对应 ed.html UI稿。
//

<template>
  <!-- Modal-Backdrop -->
  <div class="fixed inset-0 bg-black/30 z-40 flex items-center justify-center p-8">

    <!-- Modal-Container -->
    <div class="bg-white rounded-xl shadow-2xl w-full max-w-3xl border border-gray-100 flex flex-col max-h-full">
      <div class="p-6 border-b border-gray-100 flex justify-between items-center flex-shrink-0">
        <div>
          <h3 class="text-lg font-medium text-[#374151]">AI任务配置 - 章节润色</h3>
          <p class="text-sm text-[#6B7280] mt-1">配置AI助手如何处理您的内容</p>
        </div>
        <button class="w-8 h-8 hover:bg-gray-100 rounded-lg flex items-center justify-center transition-colors">
          <svg class="w-5 h-5 text-[#6B7280]" fill="none" stroke="currentColor" stroke-width="2.5" viewBox="0 0 24 24"><path d="M6 18L18 6M6 6l12 12"></path></svg>
        </button>
      </div>

      <div class="p-6 space-y-6 overflow-y-auto custom-scrollbar">
        <!-- AI模型配置 -->
        <div>
          <label class="flex items-center justify-between mb-3">
            <span class="text-sm font-medium text-[#374151]">AI模型选择</span>
            <a href="#" class="text-xs text-[#3B82F6] cursor-pointer flex items-center gap-1.5 hover:underline">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>
              了解模型差异
            </a>
          </label>
          <select class="w-full text-sm px-3 py-2 bg-white border border-gray-200 rounded-lg focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
            <option selected>GPT-4o (推荐 - 均衡性能)</option>
            <option>Claude 3 Opus (文学创作专长)</option>
            <option>混合模型 (多模型协作)</option>
            <option>自定义微调模型</option>
          </select>
        </div>

        <!-- 提示词选择 -->
        <div>
          <label for="prompt-template" class="text-sm font-medium text-[#374151] block mb-3">任务提示词模板</label>
          <select id="prompt-template" class="w-full text-sm px-3 py-2 bg-white border border-gray-200 rounded-lg focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
            <option selected>文学润色 - 注重修辞和意境</option>
            <option>简洁优化 - 删繁就简，保留精华</option>
            <option>情感强化 - 增强情感表达</option>
            <option>节奏调整 - 优化叙事节奏</option>
          </select>
        </div>

        <!-- 上下文选择 -->
        <div>
          <label class="text-sm font-medium text-[#374151] block mb-3">上下文配置</label>
          <div class="space-y-3">
            <div class="bg-white p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-10 h-10 bg-[#F3F4F6] rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-[#4B5563]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M13 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline></svg>
                  </div>
                  <div>
                    <p class="font-medium text-sm text-[#374151]">固定上下文</p>
                    <p class="text-xs text-[#9CA3AF]">小说设定、人物档案、世界观</p>
                  </div>
                </div>
                <label class="relative inline-flex items-center cursor-pointer"><input type="checkbox" class="sr-only peer" checked><div class="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-[#4B5563] peer-checked:after:translate-x-full after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border after:rounded-full after:h-5 after:w-5 after:transition-all"></div></label>
              </div>
            </div>

            <div class="bg-white p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-10 h-10 bg-[#F3F4F6] rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-[#4B5563]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M19.5 12c0-5.23-4.27-9.5-9.5-9.5S.5 6.77.5 12s4.27 9.5 9.5 9.5M12 2v2m0 18v-2M4.5 4.5l1.42 1.42M18.08 18.08l-1.42-1.42m0-11.32l1.42-1.42M4.5 19.5l1.42-1.42M2 12h2m18 0h-2"></path></svg>
                  </div>
                  <div>
                    <p class="font-medium text-sm text-[#374151]">动态上下文</p>
                    <p class="text-xs text-[#9CA3AF]">自动包含前后相关章节</p>
                  </div>
                </div>
                <label class="relative inline-flex items-center cursor-pointer"><input type="checkbox" class="sr-only peer" checked><div class="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-[#4B5563] peer-checked:after:translate-x-full after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border after:rounded-full after:h-5 after:w-5 after:transition-all"></div></label>
              </div>
            </div>

            <div class="bg-white p-4 rounded-lg border border-gray-200 hover:border-gray-300 transition-colors">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-10 h-10 bg-[#F3F4F6] rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-[#4B5563]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" /></svg>
                  </div>
                  <div>
                    <p class="font-medium text-sm text-[#374151]">RAG智能搜索</p>
                    <p class="text-xs text-[#9CA3AF]">自动检索相关内容</p>
                  </div>
                </div>
                <label class="relative inline-flex items-center cursor-pointer"><input type="checkbox" class="sr-only peer"><div class="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-[#4B5563] peer-checked:after:translate-x-full after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border after:rounded-full after:h-5 after:w-5 after:transition-all"></div></label>
              </div>
            </div>
          </div>
        </div>

        <div>
          <label class="text-sm font-medium text-[#374151] block mb-3">高级设置</label>
          <div class="space-y-4 p-4 bg-[#F9FAFB] rounded-lg border border-gray-100">
            <div class="flex items-center justify-between">
              <span class="text-sm text-[#6B7280]">创作温度</span>
              <div class="flex items-center gap-3">
                <input type="range" min="0" max="100" value="70" class="w-32 h-1 bg-gray-200 rounded-lg appearance-none cursor-pointer">
                <span class="text-sm font-mono text-[#374151] w-8 text-right">0.7</span>
              </div>
            </div>
            <div class="flex items-center justify-between">
              <span class="text-sm text-[#6B7280]">保留原文风格</span>
              <label class="relative inline-flex items-center cursor-pointer"><input type="checkbox" class="sr-only peer" checked><div class="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-[#4B5563] peer-checked:after:translate-x-full after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border after:rounded-full after:h-5 after:w-5 after:transition-all"></div></label>
            </div>
          </div>
        </div>
      </div>

      <div class="p-6 bg-[#FAFAFA] border-t border-gray-100 flex justify-end gap-3 flex-shrink-0">
        <button class="px-4 py-2 bg-white border border-gray-200 rounded-lg text-sm font-medium text-[#374151] hover:bg-gray-50 transition-colors">取消</button>
        <button class="px-4 py-2 bg-[#4B5563] text-white rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors flex items-center gap-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M4.5 12.75l6 6 9-13.5" /></svg>
          保存配置并执行
        </button>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// AI Task Config Modal Logic
</script>

<style scoped>
.custom-scrollbar::-webkit-scrollbar {
  display: block;
  width: 6px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

/* Custom range input style */
input[type=range] {
  -webkit-appearance: none;
  appearance: none;
  background: transparent;
  cursor: pointer;
}
input[type=range]::-webkit-slider-runnable-track {
  background: #E5E7EB;
  height: 0.25rem;
  border-radius: 0.25rem;
}
input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  margin-top: -6px;
  background-color: #ffffff;
  height: 1rem;
  width: 1rem;
  border-radius: 50%;
  border: 1px solid #D1D5DB;
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
}
input[type=range]:focus::-webkit-slider-thumb {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 3px #3B82F640;
}
</style>

// =
// 文件: ..\src\novel\components\NovelDashboardSidebar.vue
//

<template>
  <aside class="w-64 bg-[#FAFAFA] border-r border-gray-100 flex flex-col flex-shrink-0">
    <!-- 侧边栏头部区域 -->
    <div class="p-4 space-y-4 border-b border-gray-100 h-20 flex items-center">
      <div class="flex items-center gap-3 px-2">
        <!-- 使用与主侧边栏一致的返回工作台的链接 -->
        <router-link to="/home" class="w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center flex-shrink-0">
          <svg class="w-6 h-6 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path></svg>
        </router-link>
        <div>
          <h3 class="font-medium text-[#374151] text-sm">创作中心</h3>
          <p class="text-xs text-[#9CA3AF]">小说与故事</p>
        </div>
      </div>
    </div>

    <!-- 主导航 -->
    <nav class="flex-1 px-4 py-6">
      <p class="text-xs font-medium text-[#9CA3AF] px-3 mb-3 uppercase tracking-wider">工作空间</p>
      <div class="space-y-1">
        <router-link
            v-for="item in navItems"
            :key="item.name"
            :to="item.path"
            class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors"
            active-class="bg-[#4B5563] text-white font-medium"
        >
          <span v-html="item.icon" class="w-5 h-5"></span>
          <span>{{ item.name }}</span>
        </router-link>
      </div>
    </nav>

    <!-- 底部设置 -->
    <div class="p-4 border-t border-gray-100 mt-auto">
      <router-link to="/settings" class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="3"/><path d="M12 1V6M12 18V23M4.22 4.22L7.76 7.76M16.24 16.24L19.78 19.78M1 12H6M18 12H23M4.22 19.78L7.76 16.24M16.24 7.76L19.78 4.22"/></svg>
        <span>设置</span>
      </router-link>
    </div>
  </aside>
</template>

<script setup lang="ts">
import { ref } from 'vue'

const navItems = ref([
  { name: '我的小说', path: '/novel/dashboard', icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="5" y="3" width="14" height="18" rx="2"/><path d="M9 7H15M9 11H15M9 15H13"/></svg>` },
  { name: '最近编辑', path: '/novel/recent', icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"/><path d="M12 6V12L16 16"/></svg>` },
  { name: '回收站', path: '/novel/trash', icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M3 6h18M5 6V20a2 2 0 002 2h10a2 2 0 002-2V6M8 6V4a2 2 0 012-2h4a2 2 0 012 2v2M10 11v6M14 11v6"/></svg>` }
])
</script>

<style scoped>
.router-link-exact-active {
  color: white !important;
}
</style>

// =
// 文件: ..\src\novel\components\NovelManagementSidebar.vue
//

<template>
  <aside class="w-64 bg-[#FAFAFA] border-r border-gray-100 flex flex-col flex-shrink-0">
    <!-- 顶部小说信息区域 -->
    <div class="p-4 space-y-4 border-b border-gray-100 h-20 flex items-center">
      <router-link to="/novel/manage" class="flex items-center gap-3 px-2 group w-full">
        <div class="w-10 h-10 rounded-lg flex-shrink-0 overflow-hidden flex items-center justify-center bg-gradient-to-br from-indigo-100 to-purple-100 group-hover:scale-105 transition-transform">
          <svg class="w-6 h-6 text-indigo-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="5" y="3" width="14" height="18" rx="2"/></svg>
        </div>
        <div class="flex-1 min-w-0">
          <h3 class="font-medium text-[#374151] text-sm truncate">星际漫游者</h3>
          <p class="text-xs text-[#9CA3AF] truncate">科幻 • 编辑中</p>
        </div>
        <svg class="w-4 h-4 text-gray-400 group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M15 18L9 12L15 6"/></svg>
      </router-link>
    </div>

    <!-- 管理菜单 -->
    <nav class="flex-1 px-4 py-6">
      <div class="mb-8">
        <p class="text-xs font-medium text-[#9CA3AF] px-3 mb-3 uppercase tracking-wider">小说管理</p>
        <div class="space-y-1">
          <router-link v-for="item in managementNav" :key="item.name" :to="item.path" class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors" active-class="bg-[#4B5563] text-white font-medium">
            <span v-html="item.icon" class="w-5 h-5"></span>
            <span>{{ item.name }}</span>
          </router-link>
        </div>
      </div>

      <div>
        <p class="text-xs font-medium text-[#9CA3AF] px-3 mb-3 uppercase tracking-wider">工具</p>
        <div class="space-y-1">
          <router-link v-for="item in toolsNav" :key="item.name" :to="item.path" class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors" active-class="bg-[#4B5563] text-white font-medium">
            <span v-html="item.icon" class="w-5 h-5"></span>
            <span>{{ item.name }}</span>
          </router-link>
        </div>
      </div>
    </nav>
  </aside>
</template>

<script setup lang="ts">
import { ref } from 'vue';

// 小说管理菜单项 (静态路径)
const managementNav = ref([
  { name: '编辑章节', path: `/novel/editor`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" /></svg>` },
  { name: '大纲视图', path: `/novel/manage/outline`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25H12" /></svg>` },
  { name: '角色设定', path: `/novel/manage/character-settings`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-2.438c.155-.19.315-.386.44-1.251l-2.07-1.758a4.5 4.5 0 00-6.364-6.364l-2.07-1.758a9.337 9.337 0 00-4.12 2.438c-1.128 1.406-1.666 3.146-1.666 4.884 0 1.738.538 3.478 1.666 4.884a9.337 9.337 0 004.12 2.438zM15 19.128L12 12.586l-3 3.001" /></svg>` },
  { name: '世界观', path: `/novel/manage/worldview`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c1.356 0 2.673-.174 3.946-.512M12 21c-1.356 0-2.673-.174-3.946-.512M12 3a9.004 9.004 0 00-8.716 6.747M12 3a9.004 9.004 0 018.716 6.747M12 3c1.356 0 2.673.174 3.946.512M12 3c-1.356 0-2.673-.174-3.946-.512M3.284 15.842a9.002 9.002 0 000-7.684M20.716 15.842a9.002 9.002 0 000-7.684" /></svg>` },
]);

// 工具菜单项 (静态路径)
const toolsNav = ref([
  { name: '上下文管理', path: `/novel/manage/context`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-1.621-1.621A3 3 0 0113.5 18.257V17.25m6-3.75V17.25a3 3 0 01-3 3h-6a3 3 0 01-3-3V13.5m12-3V10.5a3 3 0 00-3-3h-6a3 3 0 00-3 3v3.75m12-3V6.75a3 3 0 00-3-3h-6a3 3 0 00-3 3v6.75" /></svg>` },
  { name: '小说设置', path: `/novel/manage/settings`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M9.594 3.94c.09-.542.56-1.007 1.11-.95.542.057 1.007.56 1.061 1.11L12 8.583l.235-3.535c.057-.542.56-1.007 1.11-.95.542.057 1.007.56 1.061 1.11L15.417 8.583l3.536-.235c.542-.057 1.007.56 1.061 1.11.057.542-.42 1.007-.95 1.061l-3.536.235.235 3.536c.057.542-.42 1.007-.95 1.061-.542.057-1.007-.42-1.061-.95L12 15.417l-.235 3.536c-.057.542-.56 1.007-1.11.95-.542-.057-1.007-.56-1.061-1.11L9.417 15.417l-3.536.235c-.542-.057-1.007-.42-.95-1.061.057-.542.42-1.007.95-1.061l3.536-.235L9.417 8.583z" /><path stroke-linecap="round" stroke-linejoin="round" d="M12 14.25a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z" /></svg>` },
  { name: '版本历史', path: `/novel/manage/history`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0011.667 0l3.181-3.183m-4.991-2.691v4.992h-4.992m0 0l-3.181-3.183a8.25 8.25 0 0111.667 0l3.181 3.183" /></svg>` },
  { name: '聊天助手', path: `/novel/manage/chat`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227l.173.013h9.24a2.708 2.708 0 002.707-3.227V6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.01z"></path></svg>` },
  { name: '导出', path: `/novel/manage/export`, icon: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3" /></svg>` },
]);
</script>

<style scoped>
.router-link-active.router-link-exact-active {
  color: white !important;
}
</style>

// =
// 文件: ..\src\novel\components\editor\EditorAIPanel.vue
//

<template>
  <aside class="w-96 bg-[#FAFAFA] border-l border-gray-100 flex flex-col flex-shrink-0">
    <div class="h-2/5 p-4 border-b border-gray-200 flex flex-col">
      <div class="flex items-center justify-between mb-3 flex-shrink-0 px-2">
        <h3 class="font-medium text-sm text-gray-700">AI任务队列</h3>
        <span class="text-xs font-medium px-2 py-0.5 rounded-full text-blue-700 bg-blue-100">3个活跃</span>
      </div>
      <div class="flex-grow space-y-2 overflow-y-auto text-sm pr-1 hide-scrollbar">
        <div class="p-3 bg-red-50 rounded-lg border border-red-200">
          <div class="flex justify-between items-center mb-1">
            <p class="font-medium text-sm text-gray-800">润色"第四章"</p>
            <span class="text-xs text-red-600 font-semibold flex items-center gap-1">
              <svg class="w-3.5 h-3.5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" /></svg>
              失败
            </span>
          </div>
          <p class="text-xs text-red-700 mt-1">生成超时，请检查网络后 <a href="#" class="underline font-medium">重试</a>。</p>
        </div>
        <!-- 进行中状态 -->
        <div class="p-3 bg-white rounded-lg border border-l-4 border-l-blue-500 shadow-sm">
          <div class="flex justify-between items-center mb-1">
            <p class="font-medium text-sm text-gray-800">扩写"第五章"大纲</p>
            <span class="text-xs text-blue-600 font-semibold">进行中...</span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-1.5 mt-2"><div class="bg-blue-500 h-1.5 rounded-full" style="width: 75%"></div></div>
          <p class="text-xs text-gray-500 mt-1.5">预计还需 15秒</p>
        </div>
        <!-- 已完成状态 -->
        <div class="p-3 bg-green-50 rounded-lg border border-green-200 cursor-pointer hover:bg-green-100 transition-colors">
          <div class="flex justify-between items-center">
            <p class="font-medium text-sm text-gray-800">角色对话分析</p>
            <span class="text-xs text-green-600 font-semibold">已完成</span>
          </div>
          <p class="text-xs text-gray-500 mt-1">点击查看结果</p>
        </div>
      </div>
    </div>

    <!-- AI 生成预览 -->
    <div class="flex-1 p-4 flex flex-col">
      <div class="flex items-center justify-between mb-3 flex-shrink-0 px-2">
        <h3 class="font-medium text-sm text-gray-700">AI生成预览 (差异对比)</h3>
        <div class="flex items-center gap-2">
          <button class="px-3 py-1 bg-green-600 text-white rounded-lg text-xs font-medium hover:bg-green-700 transition-colors flex items-center gap-1.5">
            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7"></path></svg>
            应用修改
          </button>
        </div>
      </div>
      <div class="flex-grow bg-white rounded-lg border border-gray-200 p-4 overflow-y-auto text-sm leading-relaxed">
        <p>
          警报的<del class="diff-del">声将卡尔文从浅眠中惊醒</del><ins class="diff-add">尖啸犹如一把利刃，划破了卡尔文短暂的假寐</ins>。他猛<del class="diff-del">地坐直</del><ins class="diff-add">然挺直身躯</ins>，<ins class="diff-add">猩红的警示灯在他眼中投下不祥的光晕</ins>。<del class="diff-del">眼前的屏幕上一片红色闪烁</del>。"发现引力异常，"艾拉的<del class="diff-del">声音冷静得不带一丝情感</del><ins class="diff-add">合成音毫无波澜，却字字千钧</ins>，"我们正<del class="diff-del">在接近</del><ins class="diff-add">迫近一个</ins>理论中的<del class="diff-del">跃迁点。</del><ins class="diff-add">时空奇点——跃迁点。根据数据库推演，这或许是返回太阳系的唯一路径。</ins>"
        </p>
      </div>
    </div>
  </aside>
</template>

<script setup lang="ts">
// AI panel logic will be added here in the future.
</script>

<style scoped>
.diff-del {
  background-color: #FEE2E2;
  text-decoration: line-through;
  text-decoration-color: #EF4444;
  color: #B91C1C;
  padding: 0 2px;
  border-radius: 3px;
}
.diff-add {
  background-color: #D1FAE5;
  text-decoration: none;
  color: #065F46;
  padding: 0 2px;
  border-radius: 3px;
}
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
</style>

// =
// 文件: ..\src\novel\components\editor\EditorContent.vue
//

// =
// 文件: ..\src\novel\components\editor\EditorContent.vue
//
// 说明: 编辑器中央的内容区域，包含内部的目录结构和主文本区。
//

<template>
  <main class="flex-1 flex flex-col bg-white">
    <!-- 顶部主标题 -->
    <header class="h-20 px-8 flex items-center border-b border-gray-100 flex-shrink-0">
      <h1 class="text-lg font-medium text-[#374151]">编辑章节</h1>
    </header>

    <!-- 内容区 -->
    <div class="flex-1 flex overflow-hidden">
      <!-- 内部左侧：目录、相关、笔记切换 -->
      <div class="w-[280px] border-r border-gray-100 flex flex-col flex-shrink-0">
        <div class="px-4 pt-4 border-b border-gray-200">
          <div class="flex items-center">
            <button
                v-for="tab in internalTabs"
                :key="tab.id"
                @click="activeInternalTab = tab.id"
                :class="['px-4 py-2.5 text-sm font-medium transition-colors border-b-2 -mb-px', activeInternalTab === tab.id ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700']"
            >
              {{ tab.name }}
            </button>
          </div>
        </div>
        <div class="flex-1 p-4 overflow-y-auto hide-scrollbar">
          <!-- 目录内容 -->
          <div v-if="activeInternalTab === 'directory'">
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-sm font-medium text-gray-600">章节大纲</h3>
              <button class="w-7 h-7 flex items-center justify-center text-gray-500 hover:bg-gray-200 rounded-md transition-colors" title="添加新章节">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 5v14m-7-7h14"></path></svg>
              </button>
            </div>
            <!-- 卷和章节列表 -->
            <div class="space-y-2">
              <div v-for="volume in directory" :key="volume.id">
                <div class="flex items-center gap-2 p-2 rounded-md font-semibold text-gray-800 text-sm">
                  <span v-html="icons.volume" class="w-4 h-4 text-orange-500"></span>
                  <span>{{ volume.title }}</span>
                </div>
                <ul class="pl-6 mt-1 space-y-1">
                  <li v-for="chapter in volume.chapters" :key="chapter.id">
                    <a href="#" @click.prevent="activeChapterId = chapter.id" :class="['block p-2 rounded-md text-sm transition-colors', activeChapterId === chapter.id ? 'bg-blue-100 text-blue-800 font-medium' : 'text-gray-600 hover:bg-gray-100']">
                      <div class="flex items-center gap-2">
                        <span v-html="icons.chapter" class="w-4 h-4 flex-shrink-0"></span>
                        <span class="truncate">{{ chapter.title }}</span>
                      </div>
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <!-- 其他标签页占位符 -->
          <div v-if="activeInternalTab === 'related'" class="text-center text-gray-400 pt-10">相关内容</div>
          <div v-if="activeInternalTab === 'notes'" class="text-center text-gray-400 pt-10">笔记</div>
        </div>
      </div>

      <!-- 内部右侧：编辑器正文 -->
      <div class="flex-1 flex flex-col overflow-hidden">
        <div class="h-16 px-6 flex items-center justify-between border-b border-gray-100 flex-shrink-0">
          <div class="flex items-center gap-2 text-sm">
            <span v-html="icons.chapter" class="w-4 h-4 text-gray-500"></span>
            <span class="font-medium text-[#374151]">{{ activeChapter.title }}</span>
            <span class="text-xs font-medium px-2 py-0.5 rounded-full text-green-700 bg-green-100">已保存</span>
          </div>
          <div class="text-xs text-gray-500">字数: {{ activeChapter.wordCount }}</div>
        </div>
        <div class="flex-1 p-8 overflow-y-auto hide-scrollbar">
          <div class="max-w-prose mx-auto">
            <h2 class="text-2xl font-semibold text-gray-800 mb-4">{{ activeChapter.title }}</h2>
            <p class="text-gray-700 leading-relaxed">{{ activeChapter.content }}</p>
          </div>
        </div>
      </div>
    </div>
  </main>
</template>

<script setup lang="ts">
import { ref, computed } from 'vue';

const activeInternalTab = ref('directory');
const activeChapterId = ref(12);

const internalTabs = [
  { id: 'directory', name: '目录' },
  { id: 'related', name: '相关' },
  { id: 'notes', name: '笔记' },
];

const icons = {
  volume: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 22V5z"></path></svg>`,
  chapter: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path></svg>`,
};

const directory = ref([
  {
    id: 1,
    title: '第一卷：星尘之始',
    chapters: [
      { id: 11, title: '第三章: 意外的信号', wordCount: 2105, content: '...' },
      { id: 12, title: '第四章: 跃迁点', wordCount: 2415, content: '控制台的警报声将卡尔文从浅眠中惊醒...' },
    ]
  }
]);

const activeChapter = computed(() => {
  for (const volume of directory.value) {
    const found = volume.chapters.find(c => c.id === activeChapterId.value);
    if (found) return found;
  }
  return { title: '未选择', wordCount: 0, content: '' };
});
</script>

// =
// 文件: ..\src\novel\components\editor\EditorSidebar.vue
//

// =
// 文件: ..\src\novel\components\editor\EditorSidebar.vue
//
// 说明: 编辑器左侧边栏，包含返回链接和小说管理菜单。
//

<template>
  <aside class="w-64 bg-[#FAFAFA] border-r border-gray-100 flex flex-col flex-shrink-0">
    <!-- 顶部小说信息区域 -->
    <div class="p-4 space-y-4 border-b border-gray-100 h-20 flex items-center">
      <router-link :to="`/novel/manage/${novelId}`" class="flex items-center gap-3 px-2 group w-full">
        <div class="w-10 h-10 rounded-lg flex-shrink-0 overflow-hidden flex items-center justify-center bg-gradient-to-br from-indigo-100 to-purple-100 group-hover:scale-105 transition-transform">
          <svg class="w-6 h-6 text-indigo-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><rect x="5" y="3" width="14" height="18" rx="2"/></svg>
        </div>
        <div class="flex-1 min-w-0">
          <h3 class="font-medium text-[#374151] text-sm truncate">星际漫游者</h3>
          <p class="text-xs text-[#9CA3AF] truncate">科幻 • 编辑中</p>
        </div>
        <svg class="w-4 h-4 text-gray-400 group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M15 18L9 12L15 6"/></svg>
      </router-link>
    </div>

    <!-- 管理菜单 -->
    <nav class="flex-1 px-4 py-6">
      <div class="mb-8">
        <p class="text-xs font-medium text-[#9CA3AF] px-3 mb-3 uppercase tracking-wider">小说管理</p>
        <div class="space-y-1">
          <router-link v-for="item in managementNav" :key="item.name" :to="item.path" class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors" active-class="bg-[#4B5563] text-white font-medium">
            <span v-html="item.icon" class="w-5 h-5"></span>
            <span>{{ item.name }}</span>
          </router-link>
        </div>
      </div>

      <div>
        <p class="text-xs font-medium text-[#9CA3AF] px-3 mb-3 uppercase tracking-wider">工具</p>
        <div class="space-y-1">
          <router-link v-for="item in toolsNav" :key="item.name" :to="item.path" class="flex items-center gap-3 px-3 py-2.5 text-[#6B7280] hover:bg-gray-100 rounded-lg text-sm transition-colors" active-class="bg-[#4B5563] text-white font-medium">
            <span v-html="item.icon" class="w-5 h-5"></span>
            <span>{{ item.name }}</span>
          </router-link>
        </div>
      </div>
    </nav>
  </aside>
</template>

<script setup lang="ts">
import { ref } from 'vue';
import { useRoute } from 'vue-router';

const route = useRoute();
// 从路由参数获取小说ID，使导航链接动态化
const novelId = route.params.id || 1; // 默认为1，以防万一

// 小说管理菜单项
const managementNav = ref([
  { name: '编辑章节', path: `/novel/editor/${novelId}`, icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 20h9M16.5 3.5a2.121 2.121 0 013 3L7 19l-4 1 1-4L16.5 3.5z"/></svg>` },
  { name: '大纲视图', path: `/novel/manage/${novelId}/outline`, icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M3 10V21M3 10L12 3L21 10M3 10H21M12 3V21M8 21V15C8 13.9 8.9 13 10 13H14C15.1 13 16 13.9 16 15V21"/></svg>` },
  { name: '角色设定', path: `/novel/manage/${novelId}/character-settings`, icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M17 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M23 21v-2a4 4 0 00-3-3.87M16 3.13a4 4 0 010 7.75"/></svg>` },
  { name: '世界观', path: `/novel/manage/${novelId}/worldview`, icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"/><path d="M2 12h20M12 2a15.3 15.3 0 014 10 15.3 15.3 0 01-4 10 15.3 15.3 0 01-4-10 15.3 15.3 0 014-10z"/></svg>` },
]);

// 工具菜单项
const toolsNav = ref([
  { name: '小说设置', path: `/novel/manage/${novelId}/settings`, icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M4 21v-7M4 10V3M12 21v-9M12 8V3M20 21v-5M20 12V3M1 14h6M9 8h6M17 16h6"/></svg>` }
]);
</script>

<style scoped>
/* 确保激活链接的文本颜色是白色 */
.router-link-exact-active {
  color: white !important;
}
</style>

// =
// 文件: ..\src\novel\layouts\NovelDashboardLayout.vue
//

<!-- src/novel/layouts/NovelDashboardLayout.vue -->
<template>
  <div class="h-screen w-screen flex bg-white design-frame-container">
    <div class="design-frame">
      <div class="h-10 px-5 flex items-center border-b border-gray-100 bg-gray-50 flex-shrink-0">
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 rounded-full bg-[#FF5F57]"></div>
          <div class="w-3 h-3 rounded-full bg-[#FFBD2E]"></div>
          <div class="w-3 h-3 rounded-full bg-[#28CA42]"></div>
        </div>
        <div class="ml-auto flex items-center gap-4 text-xs text-gray-400">
          <span>AI Creator Platform</span>
        </div>
      </div>
      <div class="h-[calc(100%-40px)] flex">
        <NovelDashboardSidebar />
        <main class="flex-1 bg-white flex flex-col">
          <AppHeader />
          <router-view />
        </main>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import AppHeader from '@/layouts/components/AppHeader.vue'
import NovelDashboardSidebar from '@/novel/components/NovelDashboardSidebar.vue'
import '@/novel/style.css'
</script>

<style scoped>
.design-frame-container {
  padding: 2rem;
  background-color: #f5f5f7;
}
.design-frame {
  width: 100%;
  height: 100%;
  max-width: 1800px;
  margin: auto;
  background: white;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.08);
}
</style>

// =
// 文件: ..\src\novel\layouts\NovelEditorLayout.vue
//

// =
// 文件: ..\src\novel\layouts\NovelEditorLayout.vue
//
// 说明: 这是小说编辑器的专属布局，用于构建左、中、右三栏结构。
//

<template>
  <div class="h-screen w-screen flex bg-white design-frame-container">
    <div class="design-frame">
      <!-- 模拟顶部窗口栏 -->
      <div class="h-10 px-5 flex items-center border-b border-gray-100 bg-gray-50 flex-shrink-0">
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 rounded-full bg-[#FF5F57]"></div>
          <div class="w-3 h-3 rounded-full bg-[#FFBD2E]"></div>
          <div class="w-3 h-3 rounded-full bg-[#28CA42]"></div>
        </div>
        <div class="ml-auto flex items-center gap-4 text-xs text-gray-400">
          <span>AI Creator Platform</span>
        </div>
      </div>
      <!-- 编辑器主容器 -->
      <div class="h-[calc(100%-40px)] flex">
        <NovelManagementSidebar />
        <EditorContent />
        <EditorAIPanel />
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// 引用 NovelManagementSidebar 以保持单本小说内导航一致
import NovelManagementSidebar from '@/novel/components/NovelManagementSidebar.vue';
import EditorContent from '@/novel/components/editor/EditorContent.vue';
import EditorAIPanel from '@/novel/components/editor/EditorAIPanel.vue';
import '@/novel/style.css';
</script>

<style scoped>
/* 样式与您项目中的其他布局文件保持一致 */
.design-frame-container {
  padding: 2rem;
  background-color: #f5f5f7;
}
.design-frame {
  width: 100%;
  height: 100%;
  max-width: 1800px; /* 您可以根据需要调整最大宽度 */
  margin: auto;
  background: white;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.08);
}
</style>

// =
// 文件: ..\src\novel\layouts\NovelManagementLayout.vue
//

// =
// 文件: ..\src/novel\layouts\NovelManagementLayout.vue
// (无变化，仅作为导航起点)

<!-- src/novel/layouts/NovelManagementLayout.vue -->
<template>
  <div class="h-screen w-screen flex bg-white design-frame-container">
    <div class="design-frame">
      <div class="h-10 px-5 flex items-center border-b border-gray-100 bg-gray-50 flex-shrink-0">
        <div class="flex items-center gap-2">
          <div class="w-3 h-3 rounded-full bg-[#FF5F57]"></div>
          <div class="w-3 h-3 rounded-full bg-[#FFBD2E]"></div>
          <div class="w-3 h-3 rounded-full bg-[#28CA42]"></div>
        </div>
        <div class="ml-auto flex items-center gap-4 text-xs text-gray-400">
          <span>AI Creator Platform</span>
        </div>
      </div>
      <div class="h-[calc(100%-40px)] flex">
        <NovelManagementSidebar />
        <main class="flex-1 bg-white flex flex-col">
          <!-- 使用与全局一致的 AppHeader -->
          <AppHeader />
          <router-view />
        </main>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import AppHeader from '@/layouts/components/AppHeader.vue'
import NovelManagementSidebar from '@/novel/components/NovelManagementSidebar.vue'
import '@/novel/style.css'
</script>

<style scoped>
.design-frame-container {
  padding: 2rem;
  background-color: #f5f5f7;
}
.design-frame {
  width: 100%;
  height: 100%;
  max-width: 1800px;
  margin: auto;
  background: white;
  border-radius: 16px;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.08);
}
</style>

// =
// 文件: ..\src\novel\router.ts
//

import type { RouteRecordRaw } from 'vue-router'

export const novelRoutes: Array<RouteRecordRaw> = [
    {
        path: '/novel',
        component: () => import('@/novel/layouts/NovelDashboardLayout.vue'),
        redirect: '/novel/dashboard',
        children: [
            {
                path: 'dashboard',
                name: 'NovelDashboard',
                component: () => import('@/novel/views/NovelDashboard.vue'),
                meta: { title: '我的小说' }
            },
            {
                path: 'recent',
                name: 'NovelRecent',
                component: () => import('@/novel/views/NovelRecent.vue'),
                meta: { title: '最近编辑' }
            },
            {
                path: 'trash',
                name: 'NovelTrash',
                component: () => import('@/novel/views/NovelTrash.vue'),
                meta: { title: '回收站' }
            },
            {
                path: 'import',
                name: 'NovelImport',
                component: () => import('@/novel/views/NovelImport.vue'),
                meta: { title: '导入小说' }
            },
        ]
    },
    {
        path: '/novel/manage',
        component: () => import('@/novel/layouts/NovelManagementLayout.vue'),
        redirect: '/novel/manage/outline',
        children: [
            {
                path: 'outline',
                name: 'NovelOutline',
                component: () => import('@/novel/views/NovelOutline.vue'),
                meta: { title: '大纲视图' }
            },
            {
                path: 'character-settings',
                name: 'NovelCharacterSettings',
                component: () => import('@/novel/views/CharacterSettings.vue'),
                meta: { title: '角色设定' }
            },
            {
                path: 'worldview',
                name: 'NovelWorldview',
                component: () => import('@/novel/views/NovelWorldview.vue'),
                meta: { title: '世界观' }
            },
            {
                path: 'settings',
                name: 'NovelSettings',
                component: () => import('@/novel/views/NovelSettings.vue'),
                meta: { title: '小说设置' }
            },
            {
                path: 'context',
                name: 'NovelContext',
                component: () => import('@/novel/views/NovelContext.vue'),
                meta: { title: '上下文管理' }
            },
            {
                path: 'export',
                name: 'NovelExport',
                component: () => import('@/novel/views/NovelExport.vue'),
                meta: { title: '导出小说' }
            },
            {
                path: 'history',
                name: 'NovelHistory',
                component: () => import('@/novel/views/NovelHistory.vue'),
                meta: { title: '版本历史' }
            },
            {
                path: 'chat',
                name: 'NovelChat',
                component: () => import('@/novel/views/NovelChat.vue'),
                meta: { title: 'AI聊天助手' }
            },
        ]
    },
    {
        path: '/novel/editor',
        name: 'NovelEditor',
        component: () => import('@/novel/views/EditorView.vue'),
        meta: { title: '编辑章节' }
    },
    {
        path: '/novel/read',
        name: 'NovelReader',
        component: () => import('@/novel/views/NovelReaderView.vue'),
        meta: { title: '阅读模式' }
    },
    {
        path: '/novel/context-provider',
        name: 'NovelContextProvider',
        component: () => import('@/novel/views/NovelContextProvider.vue'),
        meta: { title: '上下文预览' }
    }
]

// =
// 文件: ..\src\novel\style.css
//

/* src/novel/style.css */

/*
  小说模块专属样式。
  这些样式通过在布局根元素上的 .novel-module 类进行作用域隔离，不会影响全局。
*/

.novel-module {
}

// =
// 文件: ..\src\novel\views\CharacterSettings.vue
//

<!-- src/novel/views/CharacterSettings.vue -->
<template>
  <div class="flex-1 flex overflow-hidden bg-[#FCFCFC]">
    <!-- 左侧角色列表 -->
    <div class="w-1/3 max-w-sm border-r border-gray-100 p-4 flex flex-col">
      <div class="pb-4 mb-4 border-b border-gray-100">
        <button class="w-full flex items-center justify-center gap-2 px-4 py-2.5 bg-[#4B5563] text-white rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 5V19M5 12H19"/></svg>
          创建新角色
        </button>
      </div>
      <div class="flex-grow overflow-y-auto pr-1 space-y-2 hide-scrollbar">
        <!-- 选中角色 -->
        <a href="#" class="flex items-center gap-3 p-3 bg-blue-50 rounded-lg border border-blue-200">
          <div class="w-10 h-10 rounded-full flex-shrink-0">
            <img src="https://i.pravatar.cc/150?u=calvin" alt="Calvin" class="w-full h-full object-cover rounded-full">
          </div>
          <div class="flex-1 min-w-0">
            <p class="font-medium text-[#374151] truncate text-sm">卡尔文</p>
            <p class="text-xs text-[#6B7280] truncate">主角, 探索者四号宇航员</p>
          </div>
          <span class="text-xs font-medium px-2 py-1 rounded-md text-blue-600 bg-blue-100">编辑中</span>
        </a>
        <!-- 其他角色 -->
        <a href="#" class="flex items-center gap-3 p-3 hover:bg-gray-50 rounded-lg group transition-colors">
          <div class="w-10 h-10 rounded-full flex-shrink-0 bg-purple-100 text-purple-600 flex items-center justify-center group-hover:scale-105 transition-transform">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h.5A2.5 2.5 0 0020 5.5V3.935m-14 0A10.003 10.003 0 0112 2a10.003 10.003 0 017 1.935M6 21a2 2 0 01-2-2v-1a2 2 0 012-2h12a2 2 0 012 2v1a2 2 0 01-2 2H6z"/></svg>
          </div>
          <div class="flex-1 min-w-0">
            <p class="font-medium text-[#374151] truncate text-sm">艾拉</p>
            <p class="text-xs text-[#6B7280] truncate">AI, 飞船智能核心</p>
          </div>
        </a>
        <a href="#" class="flex items-center gap-3 p-3 hover:bg-gray-50 rounded-lg group transition-colors">
          <div class="w-10 h-10 rounded-full flex-shrink-0 bg-gray-100 text-gray-500 flex items-center justify-center group-hover:scale-105 transition-transform">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>
          </div>
          <div class="flex-1 min-w-0">
            <p class="font-medium text-[#374151] truncate text-sm">神秘信号源</p>
            <p class="text-xs text-[#6B7280] truncate">未知实体</p>
          </div>
        </a>
      </div>
    </div>

    <!-- 右侧角色详情 -->
    <div class="w-2/3 p-8 overflow-y-auto hide-scrollbar">
      <div class="space-y-6 max-w-3xl mx-auto">
        <div class="flex items-start gap-6">
          <div class="relative flex-shrink-0">
            <div class="w-24 h-24 rounded-full bg-gray-200">
              <img src="https://i.pravatar.cc/150?u=calvin" alt="Calvin" class="w-full h-full object-cover rounded-full" />
            </div>
            <button class="w-8 h-8 flex items-center justify-center rounded-full bg-white border border-gray-200 absolute bottom-0 right-0 hover:bg-gray-50 transition-colors">
              <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"/><circle cx="12" cy="13" r="3"/></svg>
            </button>
          </div>
          <div class="flex-grow space-y-4">
            <div>
              <label class="block text-sm font-medium text-[#6B7280] mb-1.5">姓名</label>
              <input type="text" value="卡尔文" class="w-full bg-white border border-gray-200 rounded-lg px-3 py-2 text-sm text-[#374151] focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
            </div>
            <div>
              <label class="block text-sm font-medium text-[#6B7280] mb-1.5">身份/标签</label>
              <input type="text" value="主角, 宇航员, 工程师" class="w-full bg-white border border-gray-200 rounded-lg px-3 py-2 text-sm text-[#374151] focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
            </div>
          </div>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div><label class="block text-sm font-medium text-[#6B7280] mb-1.5">性别</label><input type="text" value="男" class="w-full bg-white border border-gray-200 rounded-lg px-3 py-2 text-sm text-[#374151] focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition"></div>
          <div><label class="block text-sm font-medium text-[#6B7280] mb-1.5">年龄</label><input type="text" value="35" class="w-full bg-white border border-gray-200 rounded-lg px-3 py-2 text-sm text-[#374151] focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition"></div>
          <div><label class="block text-sm font-medium text-[#6B7280] mb-1.5">阵营</label><input type="text" value="人类联邦" class="w-full bg-white border border-gray-200 rounded-lg px-3 py-2 text-sm text-[#374151] focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition"></div>
        </div>
        <div>
          <label class="block text-sm font-medium text-[#6B7280] mb-1.5">人物简介 (AI将参考此内容)</label>
          <textarea rows="4" class="w-full bg-white border border-gray-200 rounded-lg px-3 py-2 text-sm text-[#374151] leading-relaxed focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition">孤独的宇航员，在“探索者四号”上执行深空任务五年。性格坚毅、内敛，对技术有极高天赋，但内心深处极度渴望回家。在一次意外中发现了回家的可能性，从此踏上未知的旅程。</textarea>
        </div>
        <div>
          <label class="block text-sm font-medium text-[#6B7280] mb-1.5">角色笔记 (仅自己可见)</label>
          <textarea rows="3" placeholder="记录一些灵感或不希望AI看到的细节..." class="w-full bg-gray-50 border border-gray-200 rounded-lg px-3 py-2 text-sm text-[#374151] focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition"></textarea>
        </div>
        <div class="pt-6 border-t border-gray-100 flex justify-end gap-3">
          <button class="px-4 py-2 bg-white border border-gray-200 rounded-lg text-sm font-medium text-red-600 hover:bg-red-50 hover:border-red-200 transition-colors">删除角色</button>
          <button class="px-5 py-2 bg-[#4B5563] text-white rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors">保存更改</button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// Component logic can be added here
</script>

// =
// 文件: ..\src\novel\views\EditorView.vue
//

// =
// 文件: ..\src\novel\views\EditorView.vue
// 说明: 编辑器专属的独立视图，根据新UI稿重构，构建了“内部导航+编辑区+AI助手”的三栏布局。
//

<template>
  <div class="h-screen w-screen flex bg-white design-frame-container">
    <div class="design-frame">
      <!-- 1. 顶部导航栏 (新) -->
      <div class="h-[56px] bg-white border-b border-gray-100 flex items-center px-6 flex-shrink-0">
        <div class="flex items-center gap-2 flex-1">
          <router-link to="/novel/dashboard" class="flex items-center gap-2 text-gray-500 hover:text-gray-800 transition-colors p-2 -ml-2 rounded-lg">
            <span v-html="icons.arrowLeft" class="w-4 h-4"></span>
            <span>返回</span>
          </router-link>
          <span class="text-gray-300">/</span>
          <span class="font-medium text-gray-800 text-sm">星际漫游者</span>
        </div>
        <div class="flex items-center gap-4">
          <button class="p-2 text-gray-500 hover:bg-gray-100 rounded-lg transition-colors">
            <span v-html="icons.search" class="w-5 h-5"></span>
          </button>
          <button class="p-2 text-gray-500 hover:bg-gray-100 rounded-lg transition-colors relative">
            <span v-html="icons.bell" class="w-5 h-5"></span>
            <span class="absolute top-1.5 right-1.5 w-2 h-2 bg-red-500 rounded-full border border-white"></span>
          </button>
          <div class="ml-2 flex items-center gap-3">
            <div class="w-9 h-9 bg-gray-200 rounded-full"></div>
            <div>
              <p class="text-sm font-medium text-[#374151]">创作者</p>
              <p class="text-xs text-[#9CA3AF]">在线</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 编辑器主容器 (三栏结构) -->
      <div class="h-[calc(100%-56px)] flex">

        <!-- 第1栏: 编辑器内部导航 (目录/相关/笔记) -->
        <aside class="w-80 bg-[#FAFAFA] border-r border-gray-100 flex flex-col flex-shrink-0">
          <div class="flex-shrink-0 px-4 pt-4 border-b border-gray-200">
            <div class="flex items-center">
              <button
                  v-for="tab in internalTabs"
                  :key="tab.id"
                  @click="activeInternalTab = tab.id"
                  :class="['px-4 py-2.5 text-sm font-medium transition-colors border-b-2 -mb-px', activeInternalTab === tab.id ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700']"
              >
                {{ tab.name }}
              </button>
            </div>
          </div>

          <!-- 目录 Tab -->
          <div v-if="activeInternalTab === 'directory'" class="flex-1 flex flex-col min-h-0 p-4">
            <div class="flex items-center justify-between mb-4 flex-shrink-0">
              <h3 class="font-medium text-sm text-gray-700 px-2">章节大纲</h3>
              <div class="flex items-center gap-1">
                <button class="w-7 h-7 flex items-center justify-center text-gray-500 hover:bg-gray-200 rounded-md transition-colors" title="添加新章节">
                  <span v-html="icons.plus" class="w-4 h-4"></span>
                </button>
                <button class="w-7 h-7 flex items-center justify-center text-gray-500 hover:bg-gray-200 rounded-md transition-colors" title="展开/折叠">
                  <span v-html="icons.folderTree" class="w-4 h-4"></span>
                </button>
              </div>
            </div>
            <nav class="flex-1 space-y-1 text-sm overflow-auto pr-2 hide-scrollbar">
              <ul class="relative">
                <li v-for="volume in directory" :key="volume.id">
                  <a href="#" class="flex items-center gap-2 p-2 rounded-md hover:bg-gray-200">
                    <span v-html="icons.chevronDown" class="w-4 h-4 text-gray-400"></span>
                    <span v-html="icons.bookOpen" class="w-4 h-4 text-orange-500"></span>
                    <span class="font-semibold text-gray-800">{{ volume.title }}</span>
                  </a>
                  <ul class="pl-5 border-l ml-3.5 border-gray-200">
                    <li v-for="part in volume.parts" :key="part.id">
                      <a href="#" class="flex items-center gap-2 p-2 rounded-md hover:bg-gray-200">
                        <span v-html="icons.chevronDown" class="w-4 h-4 text-gray-400"></span>
                        <span v-html="icons.bookmark" class="w-4 h-4 text-sky-500"></span>
                        <span class="font-medium">{{ part.title }}</span>
                      </a>
                      <ul class="pl-5 border-l ml-3.5 border-gray-200">
                        <li v-for="chapter in part.chapters" :key="chapter.id">
                          <a href="#" @click.prevent="activeContent = {type: 'chapter', id: chapter.id}" :class="['flex items-center gap-2 p-2 rounded-md', activeContent.type === 'chapter' && activeContent.id === chapter.id ? 'text-blue-600 font-medium bg-blue-100' : 'hover:bg-gray-100 text-gray-600']">
                            <span v-html="icons.fileLines" class="w-4 h-4"></span>
                            <span>{{ chapter.title }}</span>
                            <span v-if="chapter.editing" class="text-xs ml-auto font-normal px-1.5 py-0.5 rounded bg-green-100 text-green-700">编辑中</span>
                          </a>
                        </li>
                      </ul>
                    </li>
                  </ul>
                </li>
              </ul>
            </nav>
          </div>

          <!-- 相关 Tab -->
          <div v-if="activeInternalTab === 'related'" class="flex-1 flex flex-col min-h-0 p-4">
            <div class="flex items-center justify-between mb-3 flex-shrink-0">
              <h3 class="font-medium text-sm text-gray-700 px-2">相关内容</h3>
              <button class="w-7 h-7 flex items-center justify-center text-gray-500 hover:bg-gray-200 rounded-md transition-colors" title="添加新条目">
                <span v-html="icons.plus" class="w-4 h-4"></span>
              </button>
            </div>
            <div class="mb-3 flex-shrink-0 relative">
              <span v-html="icons.search" class="absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 w-4 h-4"></span>
              <input type="text" placeholder="搜索相关内容..." class="w-full text-sm bg-white border border-gray-200 rounded-lg pl-9 pr-3 py-1.5 outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 transition-colors" />
            </div>
            <nav class="flex-1 text-sm overflow-auto pr-2 hide-scrollbar">
              <ul class="space-y-1">
                <li v-for="category in relatedItems" :key="category.name">
                  <a href="#" class="flex items-center gap-3 p-2 rounded-lg hover:bg-gray-100 transition-colors">
                    <span v-html="icons.chevronDown" class="w-4 h-4 text-gray-400"></span>
                    <span v-html="category.icon" :class="`w-5 h-5 text-center ${category.color}`"></span>
                    <span class="font-medium text-gray-800">{{ category.name }}</span>
                    <span class="ml-auto text-xs text-gray-400">{{ category.items.length }}</span>
                  </a>
                  <ul class="pl-6 border-l ml-2.5 space-y-1 mt-1">
                    <li v-for="item in category.items" :key="item.id">
                      <a href="#" @click.prevent="activeContent = {type: category.type, id: item.id}" :class="['flex items-center gap-3 p-2 rounded-lg text-sm', activeContent.type === category.type && activeContent.id === item.id ? `${category.activeBgColor} border ${category.activeBorderColor} font-medium ${category.activeTextColor}` : 'hover:bg-gray-100 text-gray-600']">
                        <span v-html="item.icon" class="w-4 h-4 flex-shrink-0"></span>
                        <span class="truncate">{{ item.title }}</span>
                      </a>
                    </li>
                  </ul>
                </li>
              </ul>
            </nav>
          </div>

          <!-- 笔记 Tab -->
          <div v-if="activeInternalTab === 'notes'" class="flex-1 flex flex-col min-h-0 p-4">
            <div class="flex items-center justify-between mb-3 flex-shrink-0">
              <h3 class="font-medium text-sm text-gray-700 px-2">章节笔记</h3>
              <button class="w-7 h-7 flex items-center justify-center text-gray-500 hover:bg-gray-200 rounded-md transition-colors" title="新建笔记">
                <span v-html="icons.plus" class="w-4 h-4"></span>
              </button>
            </div>
            <div class="flex-1 space-y-2 overflow-y-auto pr-1 hide-scrollbar">
              <div v-for="note in notes" :key="note.id" @click="activeContent = {type: 'note', id: note.id}"
                   :class="['relative p-3 rounded-lg cursor-pointer transition-colors', activeContent.type === 'note' && activeContent.id === note.id ? 'bg-[#fef3c7] border border-[#fcd34d]' : 'bg-[#fefbeb] border border-[#fde68a] hover:bg-[#fef3c7]']">
                <span class="absolute top-2 right-3 text-xs text-[#92400e]">{{ note.timestamp }}</span>
                <p class="text-sm text-gray-700 font-medium mb-1 pr-16 truncate">{{ note.title }}</p>
                <p class="text-xs text-gray-600 leading-relaxed line-clamp-2">{{ note.excerpt }}</p>
              </div>
            </div>
            <div class="mt-3 pt-3 border-t border-gray-200 flex-shrink-0">
              <div class="flex gap-2">
                <input type="text" placeholder="快速添加笔记..." class="flex-1 text-sm bg-white border border-gray-200 rounded-lg px-3 py-1.5 outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 transition-colors" />
                <button class="w-8 h-8 flex-shrink-0 flex items-center justify-center bg-[#4B5563] text-white rounded-lg hover:bg-gray-700 transition-colors">
                  <span v-html="icons.paperPlane" class="w-4 h-4"></span>
                </button>
              </div>
            </div>
          </div>
        </aside>

        <!-- 第2栏: 核心内容编辑区 -->
        <main class="flex-1 flex flex-col bg-white overflow-hidden relative">
          <!-- 编辑器顶部 -->
          <header class="h-20 px-8 flex items-center justify-between border-b border-gray-100 flex-shrink-0">
            <div class="flex items-center gap-3">
              <h1 class="text-lg font-medium text-[#374151]">{{ activeContentTitle }}</h1>
              <span class="text-xs font-medium px-2 py-0.5 rounded-full text-green-700 bg-green-100">已保存</span>
            </div>
            <div class="flex items-center gap-4">
              <div class="flex items-center gap-2 text-sm text-gray-500">
                <span>字数: {{ activeContentWordCount }}</span>
                <span>•</span>
                <span>预计阅读: {{ Math.ceil(activeContentWordCount / 250) }}分钟</span>
              </div>
              <div class="flex items-center gap-1">
                <button class="w-8 h-8 flex items-center justify-center text-gray-500 hover:bg-gray-100 rounded-lg transition-colors" title="阅读模式">
                  <span v-html="icons.bookOpenReader" class="w-5 h-5"></span>
                </button>
                <button class="w-8 h-8 flex items-center justify-center text-gray-500 hover:bg-gray-100 rounded-lg transition-colors" title="版本历史">
                  <span v-html="icons.clockRotateLeft" class="w-5 h-5"></span>
                </button>
                <button class="w-8 h-8 flex items-center justify-center text-gray-500 hover:bg-gray-100 rounded-lg transition-colors" title="更多操作">
                  <span v-html="icons.ellipsisVertical" class="w-5 h-5"></span>
                </button>
              </div>
            </div>
          </header>
          <!-- 编辑器正文 -->
          <div class="flex-1 p-8 md:p-12 lg:p-16 overflow-y-auto">
            <div class="max-w-prose mx-auto prose prose-lg">
              <div v-html="activeContentBody"></div>
            </div>
          </div>

          <!-- UI交互效果展示 (静态) -->
          <div class="absolute top-1/2 left-1/4 transform -translate-x-1/2 -translate-y-1/2 space-y-4 opacity-50 pointer-events-none">
            <!-- 编辑器工具栏 -->
            <div class="relative bg-white border border-gray-200 rounded-lg p-1.5 shadow-lg flex gap-1">
              <button v-for="tool in editorTools" :key="tool.title" :title="tool.title" class="w-8 h-8 flex items-center justify-center rounded-md hover:bg-gray-100 text-gray-600 transition-colors">
                <span v-html="tool.icon" class="w-4 h-4"></span>
              </button>
            </div>
            <!-- 右键菜单 -->
            <div class="relative bg-white border border-gray-200 rounded-lg p-1 shadow-lg w-52">
              <div v-for="(item, index) in contextMenuItems" :key="index">
                <div v-if="item.divider" class="h-px bg-gray-100 my-1"></div>
                <a v-else href="#" class="flex items-center gap-3 px-3 py-2 text-sm text-gray-700 rounded-md hover:bg-gray-100 transition-colors">
                  <span v-html="item.icon" class="w-4 h-4 text-center text-gray-500"></span>
                  <span>{{ item.label }}</span>
                </a>
              </div>
            </div>
          </div>
        </main>

        <!-- 第3栏: AI助手面板 -->
        <EditorAIPanel />
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, computed } from 'vue';
import EditorAIPanel from '@/novel/components/editor/EditorAIPanel.vue';
import '@/novel/style.css'

// --- 数据和状态 ---
const activeInternalTab = ref('directory');
const activeContent = ref({ type: 'chapter', id: 41 }); // 默认选中的内容

const internalTabs = [
  { id: 'directory', name: '目录' },
  { id: 'related', name: '相关' },
  { id: 'notes', name: '笔记' },
];

const icons = {
  arrowLeft: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M15 19l-7-7 7-7"></path></svg>`,
  search: `<svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="11" cy="11" r="8"/><path d="M21 21L16.65 16.65"/></svg>`,
  bell: `<svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M18 8A6 6 0 0 0 6 8C6 15 3 17 3 17H21C21 17 18 15 18 8Z"/><path d="M13.73 21C13.5 21.6 12.8 22 12 22C11.2 22 10.5 21.6 10.27 21"/></svg>`,
  plus: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 5v14m-7-7h14"></path></svg>`,
  folderTree: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M3 3h4.586a1 1 0 01.707.293l1.414 1.414A1 1 0 0010.414 5H18a2 2 0 012 2v2M3 10v10a1 1 0 001 1h16a1 1 0 001-1V10M12 10v11"/></svg>`,
  chevronDown: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M19 9l-7 7-7-7"></path></svg>`,
  bookOpen: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M2 3h6a4 4 0 014 4v14a3 3 0 00-3-3H2zM22 3h-6a4 4 0 00-4 4v14a3 3 0 013-3h7z"></path></svg>`,
  bookmark: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 22V5z"></path></svg>`,
  fileLines: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path></svg>`,
  bookOpenReader: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M12 6.25278C12 6.25278 10.8239 5 8.5 5C5.46243 5 3 7.46243 3 10.5C3 15.0825 8.5 19 12 19C15.5 19 21 15.0825 21 10.5C21 7.46243 18.5376 5 15.5 5C13.1761 5 12 6.25278 12 6.25278Z"></path></svg>`,
  clockRotateLeft: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M23 12a11.05 11.05 0 00-22 0zm-11-7v7l5 5"></path><path d="M3.25 9L2 12l3.25 3"></path></svg>`,
  ellipsisVertical: `<svg fill="currentColor" viewBox="0 0 24 24"><path d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"></path></svg>`,
  users: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M17 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M23 21v-2a4 4 0 00-3-3.87M16 3.13a4 4 0 010 7.75"/></svg>`,
  user: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>`,
  world: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"/><path d="M2 12h20M12 2a15.3 15.3 0 014 10 15.3 15.3 0 01-4 10 15.3 15.3 0 01-4-10 15.3 15.3 0 014-10z"/></svg>`,
  plot: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M16 6l-6 6 6 6M8 6l6 6-6 6"/></svg>`,
  analysis: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M3 3v18h18M18 17V9M13 17V5M8 17v-3"/></svg>`,
  paperPlane: `<svg fill="currentColor" viewBox="0 0 24 24"><path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"></path></svg>`,
  wand: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M12 3v2m5.657-1.343l-1.414 1.414M19 12h-2m1.343 5.657l-1.414-1.414M12 21v-2m-5.657 1.343l1.414-1.414M5 12H3m-1.343-5.657l1.414 1.414"/><path d="M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"/></svg>`,
  spellCheck: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M21.5 6l-9.5 9.5-4.5-4.5"/><path d="M3 13.5l4-10 4 10M5.5 10h5"/></svg>`,
  chart: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M13 17V3M8 17v-7M18 17v-4"/></svg>`,
  expand: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M15 3h6v6M9 21H3v-6M21 3l-7 7M3 21l7-7"/></svg>`,
  compress: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M4 14h6v6M20 10h-6V4M14 10l7-7M3 21l7-7"/></svg>`,
  link: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M10 13a5 5 0 007.54.54l3-3a5 5 0 00-7.07-7.07l-1.72 1.72"/><path d="M14 11a5 5 0 00-7.54-.54l-3 3a5 5 0 007.07 7.07l1.72-1.72"/></svg>`,
  copy: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"/><path d="M5 15H4a2 2 0 01-2-2V4a2 2 0 012-2h9a2 2 0 012 2v1"/></svg>`,
  trash: `<svg fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M3 6h18M5 6v14a2 2 0 002 2h10a2 2 0 002-2V6M8 6V4a2 2 0 012-2h4a2 2 0 012 2v2"/></svg>`,
}

const directory = ref([
  { id: 1, title: '第一卷：星尘之始', parts: [
      { id: 2, title: '上部：觉醒', chapters: [] },
      { id: 3, title: '下部：远航', chapters: [
          { id: 31, title: '第三章: 意外的信号', wordCount: 2105, content: '...' },
          { id: 41, title: '第四章: 跃迁点', editing: true, wordCount: 2415, content: '<h1>第四章: 跃迁点</h1><p>控制台的警报声将卡尔文从浅眠中惊醒。他猛地坐直，眼前的屏幕上一片红色闪烁。"发现引力异常，"艾拉的声音冷静得不带一丝情感，"正在接近理论中的跃迁点。这是我们唯一的回家机会。"</p><p>卡尔文的心跳漏了一拍。回家。这个词既熟悉又陌生，像一颗深埋的种子，在这一刻突然破土而出，疯狂生长。他深吸一口气，双手稳稳地放在控制杆上。"艾拉，计算跃迁参数，准备进入。"</p>' },
          { id: 51, title: '第五章: 新的黎明', wordCount: 1988, content: '...' },
        ]},
    ]},
]);

const relatedItems = ref([
  { name: '角色', type: 'character', icon: icons.users, color: 'text-teal-500', activeBgColor: 'bg-teal-50', activeBorderColor: 'border-teal-200', activeTextColor: 'text-teal-800',
    items: [
      { id: 101, title: '角色大纲', icon: icons.fileLines, wordCount: 158, content: '<h2>卡尔文·里德</h2><p><strong>定位：</strong>主角 • 飞船驾驶员</p><p><strong>简介：</strong>35岁，前地球联邦太空军飞行员。在一次例行任务中意外穿越虫洞，漂流至未知星系。性格冷静坚韧，但内心深处渴望回家。</p><p><strong>标签：</strong>领导者、孤独、坚韧</p><h2>艾拉（AILA）</h2><p><strong>定位：</strong>AI助手 • 飞船管理系统</p><p><strong>简介：</strong>飞船的人工智能管理系统，拥有高度拟人化的交流能力。在漫长的航行中成为卡尔文唯一的伙伴。</p><p><strong>标签：</strong>理性、忠诚、进化中</p>' },
      { id: 102, title: '卡尔文·里德', icon: icons.user },
      { id: 103, title: '艾拉 (AILA)', icon: icons.user },
    ]},
  { name: '世界观', type: 'world', icon: icons.world, color: 'text-sky-500', activeBgColor: 'bg-sky-50', activeBorderColor: 'border-sky-200', activeTextColor: 'text-sky-800',
    items: [
      { id: 201, title: '世界观总览', icon: icons.fileLines, wordCount: 121, content: '<h3>时间背景</h3><p>公元2157年，人类已经建立了跨越太阳系的文明。地球联邦统一管理着地球、月球、火星和木卫二的殖民地。</p><h3>科技水平</h3><p>掌握了亚光速飞行技术，但仍未突破光速壁垒。虫洞理论处于实验阶段。</p><p><em>核心技术：反物质引擎、量子通讯、人工智能</em></p>' },
      { id: 202, title: '时间背景', icon: icons.fileLines },
      { id: 203, title: '科技水平', icon: icons.fileLines },
    ]},
  { name: '剧情', type: 'plot', icon: icons.plot, color: 'text-indigo-500', activeBgColor: 'bg-indigo-50', activeBorderColor: 'border-indigo-200', activeTextColor: 'text-indigo-800',
    items: [
      { id: 301, title: '剧情大纲', icon: icons.fileLines },
      { id: 302, title: '第一卷', icon: icons.bookOpen },
    ]},
]);

const notes = ref([
  { id: 901, title: '第四章情感转折点设计', timestamp: '今天 14:32', excerpt: '卡尔文对"回家"的复杂情感需要更细腻的描写。考虑加入更多内心独白。', wordCount: 98, content: '<h2>第四章情感转折点设计</h2><p>卡尔文对"回家"的复杂情感需要更细腻的描写。考虑加入更多内心独白。</p><p>目前的写法“心跳漏了一拍”有些 cliché，可以尝试更具体的生理和心理反应。</p><ul><li>思路1：通过回忆莉娜的片段来加强回家的渴望。</li><li>思路2：让他对未知的跃迁点产生恐惧，与回家的希望形成矛盾冲突。</li><li>思路3：让艾拉的数据分析与他的直觉产生对比。</li></ul>' },
  { id: 902, title: '跃迁点物理描述', timestamp: '今天 11:20', excerpt: '查阅了相关资料，跃迁点可以描述为时空扭曲形成的漩涡状结构...', wordCount: 50, content: '<h2>跃迁点物理描述</h2><p>查阅了相关资料，跃迁点可以描述为时空扭曲形成的漩涡状结构，周围伴随着强烈的引力潮汐。</p>' },
  { id: 903, title: '艾拉角色发展', timestamp: '昨天 16:45', excerpt: '在这一章中，艾拉开始展现出超越程序设定的"直觉"。', wordCount: 45, content: '<h2>艾拉角色发展</h2><p>在这一章中，艾拉开始展现出超越程序设定的"直觉"。这是她向真正智慧生命进化的关键一步。</p>' },
]);

// --- 交互演示数据 ---
const editorTools = [
  { title: '分析内容', icon: icons.chart },
  { title: 'AI生成', icon: icons.wand },
  { title: '润色文本', icon: icons.spellCheck },
];

const contextMenuItems = [
  { label: 'AI续写', icon: icons.wand },
  { label: '扩写', icon: icons.expand },
  { label: '精简', icon: icons.compress },
  { divider: true },
  { label: '添加关联...', icon: icons.link },
  { label: '创建副本', icon: icons.copy },
  { divider: true },
  { label: '删除', icon: icons.trash, danger: true },
];

// --- 计算属性 ---
const findItem = (type: string, id: number) => {
  if (type === 'chapter') {
    for (const vol of directory.value) {
      for (const part of vol.parts) {
        const found = part.chapters.find(c => c.id === id);
        if (found) return found;
      }
    }
  }
  if (type === 'note') {
    return notes.value.find(n => n.id === id);
  }
  const category = relatedItems.value.find(cat => cat.type === type);
  return category?.items.find(item => item.id === id);
};

const activeContentData = computed(() => {
  const { type, id } = activeContent.value;
  return findItem(type, id);
});

const activeContentTitle = computed(() => activeContentData.value?.title || '未选择');
const activeContentWordCount = computed(() => activeContentData.value?.wordCount || 0);
const activeContentBody = computed(() => activeContentData.value?.content || '<p class="text-gray-400">请从左侧选择要编辑的内容。</p>');

</script>

<style scoped>
.design-frame-container { padding: 2rem; background-color: #f5f5f7; }
.design-frame { width: 100%; height: 100%; max-width: 1800px; margin: auto; background: white; border-radius: 16px; overflow: hidden; box-shadow: 0 20px 60px rgba(0,0,0,0.08); }
.hide-scrollbar::-webkit-scrollbar { display: none; }
.prose {
  color: #374151;
}
.prose h1, .prose h2, .prose h3 {
  color: #111827;
}
.line-clamp-2 {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
}
</style>

// =
// 文件: ..\src\novel\views\NovelChat.vue
//

// =
// 文件: ..\src\novel\views\NovelChat.vue
// 说明: 新增页面，用于实现 AI 聊天助手功能，对应 ed.html UI稿。
//

<template>
  <div class="flex-1 flex overflow-hidden">
    <!-- 左侧聊天列表 -->
    <aside class="w-80 bg-[#FAFAFA] border-r border-gray-100 flex flex-col flex-shrink-0">
      <div class="p-4 border-b border-gray-100">
        <button class="w-full flex items-center justify-center gap-2 px-4 py-2 bg-[#4B5563] text-white rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 5V19M5 12H19"/></svg>
          新建对话
        </button>
      </div>

      <div class="flex-1 p-4 space-y-2 overflow-y-auto">
        <!-- 选中状态 -->
        <a href="#" class="block p-3 bg-[#EFF6FF] border border-[#3B82F6] rounded-lg">
          <div class="flex items-start gap-3">
            <div class="w-8 h-8 bg-[#3B82F6] rounded-full flex items-center justify-center flex-shrink-0">
              <svg class="w-4 h-4 text-white" fill="currentColor" viewBox="0 0 24 24"><path d="M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 9h12v2H6V9zm8 5H6v-2h8v2zm4-6H6V6h12v2z"></path></svg>
            </div>
            <div class="flex-1 min-w-0">
              <p class="font-medium text-sm text-[#374151] truncate">角色性格讨论</p>
              <p class="text-xs text-[#6B7280] truncate mt-1">关于卡尔文的内心世界...</p>
              <p class="text-xs text-[#9CA3AF] mt-2">2小时前</p>
            </div>
          </div>
        </a>

        <!-- 未选中状态 -->
        <a href="#" class="block p-3 hover:bg-gray-100 rounded-lg transition-colors">
          <div class="flex items-start gap-3">
            <div class="w-8 h-8 bg-[#F3F4F6] rounded-full flex items-center justify-center flex-shrink-0">
              <svg class="w-4 h-4 text-[#6B7280]" fill="currentColor" viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v2h-2zm0 4h2v6h-2z"></path></svg>
            </div>
            <div class="flex-1 min-w-0">
              <p class="font-medium text-sm text-[#374151] truncate">情节灵感</p>
              <p class="text-xs text-[#6B7280] truncate mt-1">跃迁点的科学原理...</p>
              <p class="text-xs text-[#9CA3AF] mt-2">昨天</p>
            </div>
          </div>
        </a>
      </div>
    </aside>

    <!-- 右侧聊天界面 -->
    <main class="flex-1 flex flex-col bg-white">
      <header class="h-20 px-8 flex items-center justify-between border-b border-gray-100 flex-shrink-0">
        <div class="flex items-center gap-4">
          <div class="w-10 h-10 bg-gradient-to-br from-[#4B5563] to-[#374151] rounded-full flex items-center justify-center">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M8.25 3v1.5M4.5 8.25H3m18 0h-1.5M4.5 12H3m18 0h-1.5m-15 3.75H3m18 0h-1.5M8.25 21v-1.5M15.75 3v1.5M12 4.5v15M15.75 21v-1.5" /></svg>
          </div>
          <div>
            <h2 class="font-medium text-[#374151]">AI创作助手</h2>
            <button class="text-sm text-[#6B7280] flex items-center gap-2 hover:text-[#374151] transition-colors mt-1">
              <span class="w-2 h-2 bg-[#10B981] rounded-full"></span>
              在线 • GPT-4o
              <svg class="w-3 h-3 text-gray-500" fill="none" stroke="currentColor" stroke-width="2.5" viewBox="0 0 24 24"><path d="M19 9l-7 7-7-7"></path></svg>
            </button>
          </div>
        </div>
        <div class="flex items-center gap-2">
          <button class="w-9 h-9 flex items-center justify-center text-gray-500 hover:bg-gray-100 rounded-lg transition-colors" title="上下文管理">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" /></svg>
          </button>
          <button class="w-9 h-9 flex items-center justify-center text-gray-500 hover:bg-gray-100 rounded-lg transition-colors" title="设置">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M9.594 3.94c.09-.542.56-1.007 1.11-.95.542.057 1.007.56 1.061 1.11L12 8.583l.235-3.535c.057-.542.56-1.007 1.11-.95.542.057 1.007.56 1.061 1.11L15.417 8.583l3.536-.235c.542-.057 1.007.56 1.061 1.11.057.542-.42 1.007-.95 1.061l-3.536.235.235 3.536c.057.542-.42 1.007-.95 1.061-.542.057-1.007-.42-1.061-.95L12 15.417l-.235 3.536c-.057.542-.56 1.007-1.11.95-.542-.057-1.007-.56-1.061-1.11L9.417 15.417l-3.536.235c-.542.057-1.007-.42-.95-1.061.057-.542.42-1.007.95-1.061l3.536-.235-.235-3.536c-.057-.542.42-1.007.95-1.061.542-.057 1.007.42 1.061.95L12 9.417l.235-3.536zM12 14.25a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z" /></svg>
          </button>
        </div>
      </header>

      <div class="flex-1 p-6 overflow-y-auto">
        <div class="max-w-3xl mx-auto space-y-6">
          <!-- 用户消息 -->
          <div class="flex justify-end">
            <div class="bg-[#3B82F6] text-white p-4 rounded-xl rounded-br-lg max-w-[70%] text-sm">
              我想讨论一下卡尔文这个角色的内心世界。在面对跃迁点时，他应该有什么样的心理活动？
            </div>
          </div>

          <!-- AI回复 -->
          <div class="flex items-start gap-3">
            <div class="w-8 h-8 bg-gradient-to-br from-[#4B5563] to-[#374151] rounded-full flex items-center justify-center flex-shrink-0 shadow-sm">
              <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M8.25 3v1.5M4.5 8.25H3m18 0h-1.5M4.5 12H3m18 0h-1.5m-15 3.75H3m18 0h-1.5M8.25 21v-1.5M15.75 3v1.5M12 4.5v15M15.75 21v-1.5" /></svg>
            </div>
            <div class="bg-[#F3F4F6] text-[#374151] p-4 rounded-xl rounded-bl-lg max-w-[70%] text-sm">
              <p class="mb-3">当然，这是一个很好的切入点。卡尔文在面对跃迁点时的心理活动可以从多个层面展现：</p>
              <ol class="list-decimal list-inside space-y-2">
                <li><strong>希望与恐惧的交织</strong>：跃迁点代表着回家的可能，但也意味着巨大的未知风险。可以描写他手心出汗，但眼神却异常明亮。</li>
                <li><strong>孤独感的顶峰</strong>：在做出这个重大决定时，他比任何时候都更加意识到自己的孤独。没有战友，只有AI。</li>
                <li><strong>对过去的眷恋</strong>："回家"这个词会触发他的记忆闸门，可以闪回一些与家人或恋人的片段。</li>
              </ol>
            </div>
          </div>
        </div>
      </div>

      <!-- 输入区域 -->
      <div class="p-4 border-t border-gray-100 bg-[#FAFAFA]">
        <div class="flex gap-3 items-end max-w-3xl mx-auto">
          <button class="w-9 h-9 flex-shrink-0 flex items-center justify-center text-gray-500 hover:bg-gray-200 rounded-lg transition-colors">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3.375 3.375 0 1118.375 12.74z" /></svg>
          </button>
          <div class="flex-1 bg-white border border-gray-200 rounded-lg focus-within:ring-1 focus-within:ring-blue-500 focus-within:border-blue-500 transition-shadow">
            <textarea
                class="w-full bg-transparent p-2.5 text-sm text-[#374151] resize-none outline-none"
                placeholder="输入您的问题，按 Enter 发送"
                rows="1"
            ></textarea>
          </div>
          <button class="w-10 h-10 flex-shrink-0 bg-[#4B5563] text-white rounded-lg hover:bg-[#374151] transition-colors flex items-center justify-center">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5"></path></svg>
          </button>
        </div>
        <div class="text-center mt-2 text-xs text-[#9CA3AF]">
          <span>按 Shift+Enter 换行 • 当前会话: 1,847 tokens</span>
        </div>
      </div>
    </main>
  </div>
</template>

<script setup lang="ts">
// Chat logic will be implemented here
</script>

<style scoped>
/* Scoped styles can be added here if needed */
</style>

// =
// 文件: ..\src\novel\views\NovelContext.vue
//

// =
// 文件: ..\src\novel\views\NovelContext.vue
// 说明: 新增页面，用于实现 AI 上下文管理功能。
//

<template>
  <div class="flex-1 p-8 overflow-auto bg-[#FCFCFC] custom-scrollbar">
    <div class="max-w-4xl mx-auto space-y-6">
      <!-- 固定上下文 -->
      <div class="context-section">
        <div class="section-header">
          <div class="section-title">
            <div class="section-icon">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M16 3a1 1 0 011 1v11.586l-3.293-3.293a1 1 0 00-1.414 1.414l5 5a1 1 0 001.414 0l5-5a1 1 0 00-1.414-1.414L18 15.586V4a1 1 0 01-1-1H4a1 1 0 00-1 1v16a1 1 0 001 1h8"></path></svg>
            </div>
            <span>固定上下文</span>
          </div>
        </div>
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-[#374151] mb-1.5">选择预设内容
              <span class="text-xs text-[#9CA3AF] ml-2">可选择角色设定或世界观设定</span>
            </label>
            <select class="w-full px-4 py-2 border border-[#E5E7EB] rounded-lg text-sm text-[#374151] custom-select focus:outline-none focus:border-[#3B82F6] focus:ring-1 focus:ring-[#3B82F6]">
              <option value="">请选择预设内容</option>
              <option value="character-1">角色设定 - 卡尔文（主角）</option>
              <option value="character-2">角色设定 - 艾拉（AI）</option>
              <option value="world-1">世界观 - 跃迁技术</option>
              <option value="world-2">世界观 - 2157年地球联邦</option>
            </select>
          </div>

          <div>
            <label class="block text-sm font-medium text-[#374151] mb-1.5">已选择的内容</label>
            <div class="content-list">
              <div class="content-list-item selected">
                <div>
                  <div class="font-medium text-sm text-[#374151]">角色设定 - 卡尔文</div>
                  <div class="text-xs text-[#9CA3AF] mt-1">35岁，探索者四号宇航员</div>
                </div>
                <button class="text-[#9CA3AF] hover:text-[#EF4444] transition-colors">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2.5" viewBox="0 0 24 24"><path d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
              </div>
              <div class="content-list-item">
                <div>
                  <div class="font-medium text-sm text-[#374151]">世界观 - 2157年地球联邦</div>
                  <div class="text-xs text-[#9CA3AF] mt-1">人类统一政府，掌握初级跃迁技术</div>
                </div>
                <button class="text-[#9CA3AF] hover:text-[#EF4444] transition-colors">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2.5" viewBox="0 0 24 24"><path d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
              </div>
            </div>
          </div>

          <div>
            <label class="block text-sm font-medium text-[#374151] mb-1.5">自定义固定内容</label>
            <textarea class="w-full px-4 py-3 border border-[#E5E7EB] rounded-lg text-sm text-[#374151] resize-none focus:outline-none focus:border-[#3B82F6] focus:ring-1 focus:ring-[#3B82F6]" rows="4" placeholder="输入固定的背景设定、人物关系、重要事件等信息..."></textarea>
          </div>

          <div class="flex items-center gap-2 text-sm text-[#9CA3AF]">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>
            <span>当前字数：0 / 建议不超过 2000 字</span>
          </div>
        </div>
      </div>

      <!-- 动态上下文 -->
      <div class="context-section">
        <div class="section-header">
          <div class="section-title">
            <div class="section-icon">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M14 10l-4 4m0 0l4 4m-4-4H3m11-4h7m-7 8h7M3 6h7m-7 8h7"></path></svg>
            </div>
            <span>动态上下文</span>
          </div>
        </div>
        <div class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-4">
            <div>
              <label class="block text-sm font-medium text-[#374151] mb-1.5">前置章节数</label>
              <div class="flex items-center gap-3">
                <input type="range" min="0" max="10" v-model="prevChapters" class="range-custom flex-1"/>
                <span class="text-sm font-medium w-8 text-center text-[#374151]">{{ prevChapters }}</span>
              </div>
              <div class="text-xs text-[#9CA3AF] mt-1">包含当前章节之前的章节内容</div>
            </div>
            <div>
              <label class="block text-sm font-medium text-[#374151] mb-1.5">后续章节数</label>
              <div class="flex items-center gap-3">
                <input type="range" min="0" max="10" v-model="nextChapters" class="range-custom flex-1"/>
                <span class="text-sm font-medium w-8 text-center text-[#374151]">{{ nextChapters }}</span>
              </div>
              <div class="text-xs text-[#9CA3AF] mt-1">包含当前章节之后的大纲内容</div>
            </div>
          </div>
        </div>
      </div>

      <!-- 底部总览 -->
      <div class="bg-[#F3F4F6] rounded-xl p-6 mt-6">
        <h3 class="font-medium text-base text-[#374151] mb-4">上下文总览</h3>
        <div class="grid grid-cols-3 gap-4 text-sm">
          <div class="text-center">
            <div class="text-2xl font-light text-[#374151]">2,450</div>
            <div class="text-xs text-[#9CA3AF]">总字数</div>
          </div>
          <div class="text-center">
            <div class="text-2xl font-light text-[#0EA5E9]">6</div>
            <div class="text-xs text-[#9CA3AF]">包含章节</div>
          </div>
          <div class="text-center">
            <div class="text-2xl font-light text-[#10B981]">85%</div>
            <div class="text-xs text-[#9CA3AF]">相关度</div>
          </div>
        </div>
      </div>

    </div>
  </div>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const prevChapters = ref(3);
const nextChapters = ref(2);
const prevVolumes = ref(1);
const nextVolumes = ref(1);

</script>

<style scoped>
.custom-scrollbar::-webkit-scrollbar {
  display: block;
  width: 6px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

.context-section {
  background: #FFFFFF;
  border: 1px solid #E5E7EB;
  border-radius: 12px;
  padding: 24px;
  transition: all 0.3s ease;
}

.context-section:hover {
  border-color: #D1D5DB;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}

.section-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 20px;
}

.section-title {
  font-size: 1.125rem;
  font-weight: 600;
  color: #111827;
  display: flex;
  align-items: center;
  gap: 10px;
}

.section-icon {
  width: 36px;
  height: 36px;
  background: #F3F4F6;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #4B5563;
}

.custom-select {
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg width='14' height='8' viewBox='0 0 14 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M1 1L7 7L13 1' stroke='%236B7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 14px;
  padding-right: 40px;
}

.content-list {
  border: 1px solid #E5E7EB;
  border-radius: 8px;
  max-height: 200px;
  overflow-y: auto;
}

.content-list-item {
  padding: 12px 16px;
  border-bottom: 1px solid #F3F4F6;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.content-list-item:hover {
  background: #F9FAFB;
}

.content-list-item.selected {
  background: #EFF6FF;
  border-left: 3px solid #3B82F6;
  padding-left: 13px;
}

.content-list-item:last-child {
  border-bottom: none;
}

.range-custom {
  -webkit-appearance: none;
  appearance: none;
  width: 100%;
  height: 16px;
  background: transparent;
  outline: none;
  padding: 0;
  margin: 0;
}

.range-custom::-webkit-slider-runnable-track {
  width: 100%;
  height: 6px;
  cursor: pointer;
  background: #E5E7EB;
  border-radius: 9999px;
}

.range-custom::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  height: 20px;
  width: 20px;
  background: #3B82F6;
  border-radius: 50%;
  border: 3px solid white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  cursor: grab;
  margin-top: -7px;
}
.range-custom:active::-webkit-slider-thumb {
  cursor: grabbing;
}

.range-custom::-moz-range-track {
  width: 100%;
  height: 6px;
  cursor: pointer;
  background: #E5E7EB;
  border-radius: 9999px;
}

.range-custom::-moz-range-thumb {
  height: 20px;
  width: 20px;
  background: #3B82F6;
  border-radius: 50%;
  border: 3px solid white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  cursor: grab;
}
.range-custom:active::-moz-range-thumb {
  cursor: grabbing;
}
</style>

// =
// 文件: ..\src\novel\views\NovelContextProvider.vue
//

// =
// 文件: ..\src\novel\views\NovelContextProvider.vue
// 说明: 新增页面，用于在执行AI任务前，对完整的上下文进行预览和确认。对应 07_ai_context.html UI稿。
//

<template>
  <div class="min-h-screen p-8 bg-[#F5F5F7]">
    <div class="max-w-[1200px] mx-auto">
      <!-- 页面标题 -->
      <div class="mb-8">
        <h1 class="text-2xl font-light text-[#374151] mb-2">上下文预览</h1>
        <p class="text-[#6B7280]">在执行AI任务前，检查并确认将要提供给AI的全部信息。</p>
      </div>

      <!-- 主内容区 -->
      <div class="bg-white rounded-xl shadow-lg overflow-hidden border border-gray-100">
        <!-- 顶部操作栏 -->
        <div class="h-16 px-8 flex items-center justify-between border-b border-gray-100">
          <button class="text-sm text-[#6B7280] hover:text-[#374151] transition-colors flex items-center gap-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M15 19l-7-7 7-7"/></svg>
            返回编辑器
          </button>
        </div>

        <!-- 上下文列表 -->
        <div class="p-8 space-y-4">
          <!-- 固定上下文 -->
          <div class="border border-gray-100 rounded-xl overflow-hidden">
            <div class="px-6 py-4 bg-[#FAFAFA] cursor-pointer hover:bg-[#F3F4F6] transition-colors flex items-center justify-between">
              <div class="flex items-center gap-3">
                <svg class="w-5 h-5 text-[#4B5563] collapse-arrow" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"/></svg>
                <svg class="w-5 h-5 text-[#6B7280]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/></svg>
                <div>
                  <h3 class="font-medium text-[#374151]">固定上下文</h3>
                  <p class="text-xs text-[#9CA3AF] mt-0.5">始终包含在 AI 对话中的基础信息</p>
                </div>
              </div>
              <div class="flex items-center gap-4">
                <span class="text-xs text-[#9CA3AF]">648 字符</span>
                <label class="flex items-center gap-2 cursor-pointer">
                  <span class="text-xs text-[#6B7280]">启用</span>
                  <input type="checkbox" class="w-4 h-4 text-[#4B5563] border-gray-300 rounded focus:ring-[#4B5563]" checked>
                </label>
              </div>
            </div>
            <div class="collapse-content">
              <!-- Collapsed Content -->
            </div>
          </div>

          <!-- 动态上下文 -->
          <div class="border border-gray-100 rounded-xl overflow-hidden">
            <div class="px-6 py-4 bg-[#FAFAFA] cursor-pointer hover:bg-[#F3F4F6] transition-colors flex items-center justify-between">
              <div class="flex items-center gap-3">
                <svg class="w-5 h-5 text-[#4B5563] collapse-arrow" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"/></svg>
                <svg class="w-5 h-5 text-[#6B7280]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/></svg>
                <div>
                  <h3 class="font-medium text-[#374151]">动态上下文</h3>
                  <p class="text-xs text-[#9CA3AF] mt-0.5">根据当前创作内容自动更新的信息</p>
                </div>
              </div>
              <div class="flex items-center gap-4">
                <span class="text-xs text-[#9CA3AF]">892 字符</span>
                <label class="flex items-center gap-2 cursor-pointer">
                  <span class="text-xs text-[#6B7280]">启用</span>
                  <input type="checkbox" class="w-4 h-4 text-[#4B5563] border-gray-300 rounded focus:ring-[#4B5563]" checked>
                </label>
              </div>
            </div>
            <div class="collapse-content">
              <!-- Collapsed Content -->
            </div>
          </div>

          <!-- RAG 上下文 -->
          <div class="border border-gray-100 rounded-xl overflow-hidden">
            <div class="px-6 py-4 bg-[#FAFAFA] cursor-pointer hover:bg-[#F3F4F6] transition-colors flex items-center justify-between">
              <div class="flex items-center gap-3">
                <svg class="w-5 h-5 text-[#4B5563] collapse-arrow" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"/></svg>
                <svg class="w-5 h-5 text-[#6B7280]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/></svg>
                <div>
                  <h3 class="font-medium text-[#374151]">RAG 上下文</h3>
                  <p class="text-xs text-[#9CA3AF] mt-0.5">从知识库检索的相关参考信息</p>
                </div>
              </div>
              <div class="flex items-center gap-4">
                <span class="text-xs text-[#9CA3AF]">456 字符</span>
                <label class="flex items-center gap-2 cursor-pointer">
                  <span class="text-xs text-[#6B7280]">启用</span>
                  <input type="checkbox" class="w-4 h-4 text-[#4B5563] border-gray-300 rounded focus:ring-[#4B5563]" checked>
                </label>
              </div>
            </div>
            <div class="collapse-content">
              <!-- Collapsed Content -->
            </div>
          </div>

          <!-- 提示词 -->
          <div class="border border-gray-100 rounded-xl overflow-hidden">
            <div class="px-6 py-4 bg-[#FAFAFA] cursor-pointer hover:bg-[#F3F4F6] transition-colors flex items-center justify-between">
              <div class="flex items-center gap-3">
                <svg class="w-5 h-5 text-[#4B5563] collapse-arrow expanded" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"/></svg>
                <svg class="w-5 h-5 text-[#6B7280]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M13 10V3L4 14h7v7l9-11h-7z"/></svg>
                <div>
                  <h3 class="font-medium text-[#374151]">提示词</h3>
                  <p class="text-xs text-[#9CA3AF] mt-0.5">当前任务的具体指令</p>
                </div>
              </div>
              <div class="flex items-center gap-4">
                <span class="text-xs text-[#9CA3AF]">462 字符</span>
                <label class="flex items-center gap-2 cursor-pointer">
                  <span class="text-xs text-[#6B7280]">启用</span>
                  <input type="checkbox" class="w-4 h-4 text-[#4B5563] border-gray-300 rounded focus:ring-[#4B5563]" checked>
                </label>
              </div>
            </div>
            <div class="collapse-content expanded">
              <div class="px-6 py-4 border-t border-gray-100">
                <textarea class="context-textarea" placeholder="输入提示词...">请续写下一段内容，要求：

1. 延续当前紧张神秘的氛围
2. 详细描写空间站内部的环境细节
3. 通过卡尔文的视角展现他的内心活动
4. 适当加入一些技术细节增强科幻感
5. 在段落末尾设置一个小悬念，引导读者继续阅读
6. 字数控制在 300-400 字左右

重点描写方向：卡尔文进入空间站控制室，发现仍在运行的神秘设备，以及他对这些发现的反应和推测。</textarea>
              </div>
            </div>
          </div>
        </div>

        <!-- 底部信息栏 -->
        <div class="px-8 py-4 bg-[#FAFAFA] border-t border-gray-100 flex items-center justify-between">
          <div class="flex items-center gap-6 text-xs text-[#9CA3AF]">
            <span>加载时间: 36ms</span>
          </div>
          <div class="flex items-center gap-3">
            <button class="px-4 py-2 text-sm text-[#6B7280] bg-white border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
              取消
            </button>
            <button class="px-4 py-2 bg-[#10B981] text-white rounded-lg text-sm font-medium hover:bg-[#059669] transition-colors">
              执行
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// Context preview logic will be implemented here
</script>

<style scoped>
.collapse-content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
}

.collapse-content.expanded {
  max-height: 500px; /* Or a sufficiently large value */
  transition: max-height 0.3s ease-in;
}

.collapse-arrow {
  transition: transform 0.3s ease;
}

.collapse-arrow.expanded {
  transform: rotate(90deg);
}

.context-textarea {
  background: transparent;
  border: none;
  resize: none;
  outline: none;
  width: 100%;
  line-height: 1.6;
  color: #6B7280;
  font-size: 14px;
  padding: 12px 16px;
  min-height: 100px;
  transition: background-color 0.2s ease;
}

.context-textarea:focus {
  background: #F9FAFB;
  border-radius: 8px;
}
</style>

// =
// 文件: ..\src\novel\views\NovelDashboard.vue
//

<template>
  <div class="flex-1 px-8 py-6 overflow-auto bg-[#FCFCFC] hide-scrollbar">
    <div class="flex justify-between items-center mb-6">
      <div class="flex items-center gap-4">
        <!-- 搜索框 -->
        <label class="flex items-center gap-2 w-64 bg-white border border-gray-200 rounded-lg px-3 py-2 focus-within:border-blue-500 focus-within:ring-1 focus-within:ring-blue-500 transition">
          <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><circle cx="11" cy="11" r="8"/><path d="M21 21L16.65 16.65"/></svg>
          <input type="text" class="grow text-sm bg-transparent outline-none text-[#374151]" placeholder="搜索小说名或标签..." />
        </label>
        <!-- 下拉选择 -->
        <select class="text-sm bg-white border border-gray-200 rounded-lg px-3 py-2 outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500 transition text-[#374151]">
          <option>全部类型</option>
          <option>科幻</option>
          <option>言情</option>
          <option>悬疑</option>
        </select>
      </div>
      <div class="flex items-center gap-4">
        <button class="text-sm text-[#6B7280] hover:text-[#374151] transition-colors flex items-center gap-2">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M7 18C4.5 18 3 16.5 3 14C3 11.5 5 10 7 10C7.3 10 7.5 10 7.8 10.1C8.5 7.2 11 5 14 5C17.3 5 20 7.7 20 11C20 11.3 20 11.7 19.9 12C21.1 12.5 22 13.6 22 15C22 16.9 20.4 18.5 18.5 18.5"/><path d="M12 13V21M15 16L12 13L9 16"/></svg>
          <span>导入小说</span>
        </button>
        <button class="text-sm font-medium text-white bg-[#4B5563] hover:bg-gray-700 transition-colors flex items-center gap-2 px-4 py-2 rounded-lg">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 5V19M5 12H19"/></svg>
          <span>新建小说</span>
        </button>
      </div>
    </div>

    <!-- 小说网格 -->
    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
      <div
          v-for="(novel, index) in novels"
          :key="novel.title"
          class="group bg-white rounded-xl border border-gray-100 p-4 flex flex-col transition-all duration-300 hover:shadow-md hover:-translate-y-1"
      >
        <!-- [修改] 链接指向静态的管理页面 -->
        <router-link to="/novel/manage" class="block aspect-[2/3] relative w-full mb-4 rounded-lg overflow-hidden">
          <img :src="novel.cover" class="object-cover w-full h-full group-hover:scale-105 transition-transform duration-300" alt="Book Cover">
          <div class="absolute top-0 left-0 w-full h-full bg-black/5 group-hover:bg-black/10 transition-colors"></div>
        </router-link>

        <div class="flex flex-col flex-grow">
          <h3 class="text-sm font-medium text-[#374151] leading-tight truncate">
            <!-- [修改] 链接指向静态的管理页面 -->
            <router-link to="/novel/manage" class="hover:text-blue-600 transition-colors">{{ novel.title }}</router-link>
          </h3>
          <p class="text-xs text-[#9CA3AF] mt-1">{{ novel.chapters }}章 · {{ novel.status.text }}</p>
          <div class="mt-auto pt-3">
            <div class="border-t border-gray-100 pt-3 flex justify-between items-center text-xs text-gray-400">
              <div class="flex items-center gap-1.5">
                 <span
                     v-for="tag in novel.tags"
                     :key="tag.text"
                     class="text-xs px-1.5 py-0.5 rounded font-medium"
                     :class="tag.class"
                 >
                  {{ tag.text }}
                </span>
              </div>
              <span>{{ novel.lastUpdated }}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const novels = ref([
  {
    title: '星际漫游者',
    description: '一部关于孤独宇航员在未知星系中寻找回家之路的科幻史诗。',
    cover: 'https://images.unsplash.com/photo-1589998059171-988d887df646?q=80&w=800',
    status: { text: '编辑中', class: 'bg-green-500/90' },
    tags: [
      { text: '科幻', class: 'bg-blue-50 text-blue-700' },
      { text: '冒险', class: 'bg-purple-50 text-purple-700' }
    ],
    chapters: 24,
    lastUpdated: '2小时前'
  },
  {
    title: '时间之沙',
    description: '当历史可以被改写，一个历史学家必须阻止一个神秘组织抹去关键的历史事件。',
    cover: 'https://images.unsplash.com/photo-1544947950-fa07a98d237f?q=80&w=800',
    status: { text: '待审核', class: 'bg-yellow-500/90' },
    tags: [
      { text: '悬疑', class: 'bg-yellow-50 text-yellow-700' },
      { text: '科幻', class: 'bg-blue-50 text-blue-700' }
    ],
    chapters: 15,
    lastUpdated: '1天前'
  },
  {
    title: '深海回响',
    description: '一支科考队在马里亚纳海沟深处唤醒了远古的未知生物，带来了无尽的恐惧。',
    cover: 'https://images.unsplash.com/photo-1512820790803-83ca734da794?q=80&w=800',
    status: { text: '已驳回', class: 'bg-red-500/90' },
    tags: [
      { text: '恐怖', class: 'bg-gray-100 text-gray-600' },
      { text: '冒险', class: 'bg-purple-50 text-purple-700' }
    ],
    chapters: 5,
    lastUpdated: '3天前'
  },
  {
    title: '都市霓虹',
    description: '一个平凡的程序员意外获得读取他人思想的能力，卷入一场巨大的商业阴谋。',
    cover: 'https://images.unsplash.com/photo-1532012197267-da84d127e765?q=80&w=800',
    status: { text: '已发布', class: 'bg-blue-500/90' },
    tags: [
      { text: '都市', class: 'bg-pink-50 text-pink-700' },
      { text: '异能', class: 'bg-green-50 text-green-700' }
    ],
    chapters: 102,
    lastUpdated: '1周前'
  },
  {
    title: '红尘一梦',
    description: '穿越回古代，成为一个不受宠的公主，她如何利用现代知识在宫廷斗争中生存。',
    cover: 'https://images.unsplash.com/photo-1521587760476-6c12a4b040da?q=80&w=800',
    status: { text: '编辑中', class: 'bg-green-500/90' },
    tags: [
      { text: '古风', class: 'bg-red-50 text-red-700' },
      { text: '言情', class: 'bg-indigo-50 text-indigo-700' }
    ],
    chapters: 56,
    lastUpdated: '5小时前'
  }
]);
</script>

// =
// 文件: ..\src\novel\views\NovelExport.vue
//

<template>
  <div class="flex-1 flex overflow-hidden">
    <div class="w-[420px] border-r border-gray-100 p-8 flex flex-col bg-white flex-shrink-0">
      <div class="space-y-8 flex-grow">
        <div>
          <h3 class="text-base font-medium text-[#374151] mb-4">导出格式</h3>
          <div class="grid grid-cols-3 gap-3">
            <button
                @click="selectedFormat = 'pdf'"
                :class="['flex flex-col items-center justify-center gap-2 p-4 rounded-lg border-2 transition-all aspect-square', selectedFormat === 'pdf' ? 'border-blue-500 text-blue-600 bg-blue-50/50' : 'bg-white text-gray-400 border-gray-200 hover:border-gray-300']">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path></svg>
              <span class="block text-xs font-semibold">PDF</span>
            </button>
            <button
                @click="selectedFormat = 'docx'"
                :class="['flex flex-col items-center justify-center gap-2 p-4 rounded-lg border-2 transition-all aspect-square', selectedFormat === 'docx' ? 'border-blue-500 text-blue-600 bg-blue-50/50' : 'bg-white text-gray-400 border-gray-200 hover:border-gray-300']">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path></svg>
              <span class="block text-xs font-semibold">DOCX</span>
            </button>
            <button
                @click="selectedFormat = 'epub'"
                :class="['flex flex-col items-center justify-center gap-2 p-4 rounded-lg border-2 transition-all aspect-square', selectedFormat === 'epub' ? 'border-blue-500 text-blue-600 bg-blue-50/50' : 'bg-white text-gray-400 border-gray-200 hover:border-gray-300']">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path d="M4 19.5A2.5 2.5 0 016.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 014 19.5v-15A2.5 2.5 0 016.5 2z"></path></svg>
              <span class="block text-xs font-semibold">EPUB</span>
            </button>
          </div>
        </div>

        <div>
          <h3 class="text-base font-medium text-[#374151] mb-4">包含内容</h3>
          <div class="space-y-3">
            <label class="flex items-center gap-3 p-4 bg-white rounded-lg border border-gray-200 cursor-pointer hover:bg-gray-50 transition-colors">
              <input type="checkbox" class="sr-only peer" checked>
              <div class="w-5 h-5 rounded flex items-center justify-center border border-gray-300 peer-checked:bg-[#4B5563] peer-checked:border-[#4B5563]">
                <svg class="w-3.5 h-3.5 text-white hidden peer-checked:block" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" /></svg>
              </div>
              <span class="text-sm text-[#374151] flex-1">小说正文</span>
            </label>
            <label class="flex items-center gap-3 p-4 bg-white rounded-lg border border-gray-200 cursor-pointer hover:bg-gray-50 transition-colors">
              <input type="checkbox" class="sr-only peer" checked>
              <div class="w-5 h-5 rounded flex items-center justify-center border border-gray-300 peer-checked:bg-[#4B5563] peer-checked:border-[#4B5563]">
                <svg class="w-3.5 h-3.5 text-white hidden peer-checked:block" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" /></svg>
              </div>
              <span class="text-sm text-[#374151] flex-1">章节大纲</span>
            </label>
            <label class="flex items-center gap-3 p-4 bg-white rounded-lg border border-gray-200 cursor-pointer hover:bg-gray-50 transition-colors">
              <input type="checkbox" class="sr-only peer">
              <div class="w-5 h-5 rounded flex items-center justify-center border border-gray-300 peer-checked:bg-[#4B5563] peer-checked:border-[#4B5563]">
                <svg class="w-3.5 h-3.5 text-white hidden peer-checked:block" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" /></svg>
              </div>
              <span class="text-sm text-[#374151] flex-1">角色设定集</span>
            </label>
            <label class="flex items-center gap-3 p-4 bg-white rounded-lg border border-gray-200 cursor-pointer hover:bg-gray-50 transition-colors">
              <input type="checkbox" class="sr-only peer">
              <div class="w-5 h-5 rounded flex items-center justify-center border border-gray-300 peer-checked:bg-[#4B5563] peer-checked:border-[#4B5563]">
                <svg class="w-3.5 h-3.5 text-white hidden peer-checked:block" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" /></svg>
              </div>
              <span class="text-sm text-[#374151] flex-1">作者笔记</span>
            </label>
          </div>
        </div>
      </div>

      <button class="w-full mt-8 flex h-11 items-center justify-center gap-2 bg-[#374151] hover:bg-[#4B5563] text-white font-medium text-sm rounded-lg px-4 transition-colors">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M21 15v4a2 2 0 01-2 2H5a2 2 0 01-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
        <span>开始导出</span>
      </button>
    </div>

    <!-- 右侧预览区 -->
    <div class="flex-1 p-8 bg-[#f5f5f7] overflow-auto custom-scrollbar">
      <div class="bg-white p-12 shadow-lg mx-auto" style="width: 210mm; min-height: 297mm;">
        <div class="text-center mb-16">
          <h1 class="text-4xl" style="font-family: 'Georgia', serif;">星际漫游者</h1>
          <p class="text-lg text-gray-500 mt-2" style="font-family: 'Georgia', serif;">张小明</p>
        </div>
        <div class="text-lg leading-relaxed text-justify" style="font-family: 'Georgia', serif;">
          <h2 class="text-2xl font-bold mb-4">第一章：深空的回响</h2>
          <p class="mb-6">引擎的低鸣是卡尔文在"探索者四号"上唯一的伴侣。在这片无垠的黑暗中，星辰是唯一的路标，而孤独则是永恒的旋律。他已经在这艘小型科研船上漂泊了三百个标准日，任务是勘探位于天鹅座 X-1 黑洞边缘的未知行星——代号“幻影”。</p>
          <p class="mb-6">“中央电脑，报告当前状态。”卡尔文的声音在寂静的驾驶舱内回荡，略带沙哑。</p>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const selectedFormat = ref('pdf');
</script>

<style scoped>
.custom-scrollbar::-webkit-scrollbar {
  display: block;
  width: 6px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}
</style>

// =
// 文件: ..\src\novel\views\NovelHistory.vue
//

<template>
  <div class="flex-1 flex overflow-hidden">
    <!-- 左侧章节列表 -->
    <div class="w-80 border-r border-gray-100 bg-[#FCFCFC] flex flex-col flex-shrink-0">
      <header class="h-20 px-6 flex items-center justify-between border-b border-gray-100 flex-shrink-0">
        <h2 class="font-medium text-[#374151]">选择章节</h2>
        <select class="text-sm bg-white border border-gray-200 rounded-lg px-2 py-1.5 outline-none focus:border-blue-500 focus:ring-1 focus:ring-blue-500 transition">
          <option>所有版本</option>
          <option>手动保存</option>
          <option>自动保存</option>
          <option>AI修改</option>
        </select>
      </header>

      <div class="flex-1 p-4 overflow-y-auto space-y-2 custom-scrollbar">
        <!-- 选中章节 -->
        <div class="bg-white rounded-lg border-2 border-[#4B5563] cursor-pointer p-4">
          <div class="flex items-center justify-between mb-2">
            <h3 class="font-medium text-sm text-[#374151]">第四章：跃迁点</h3>
            <span class="text-xs font-medium px-2 py-0.5 rounded-full text-blue-700 bg-blue-100">当前</span>
          </div>
          <p class="text-xs text-[#6B7280]">最后修改：10分钟前</p>
          <p class="text-xs text-[#9CA3AF] mt-1">12个历史版本</p>
        </div>

        <!-- 其他章节 -->
        <div class="bg-white rounded-lg border-2 border-transparent hover:border-gray-200 cursor-pointer p-4 transition-colors">
          <h3 class="font-medium text-sm text-[#374151] mb-2">第三章：意外的信号</h3>
          <p class="text-xs text-[#6B7280]">最后修改：2小时前</p>
          <p class="text-xs text-[#9CA3AF] mt-1">8个历史版本</p>
        </div>

        <div class="bg-white rounded-lg border-2 border-transparent hover:border-gray-200 cursor-pointer p-4 transition-colors">
          <h3 class="font-medium text-sm text-[#374151] mb-2">第二章：艾拉</h3>
          <p class="text-xs text-[#6B7280]">最后修改：1天前</p>
          <p class="text-xs text-[#9CA3AF] mt-1">5个历史版本</p>
        </div>
      </div>
    </div>

    <!-- 右侧版本对比 -->
    <div class="flex-1 flex flex-col bg-white">
      <header class="h-20 px-8 flex items-center justify-between border-b border-gray-100 flex-shrink-0">
        <div>
          <h1 class="text-lg font-medium text-[#374151]">第四章 版本对比</h1>
          <p class="text-sm text-[#6B7280] mt-1">当前版本 vs AI润色版本 (1小时前)</p>
        </div>
        <div class="flex items-center gap-3">
          <button class="px-4 py-2 bg-white border border-gray-200 rounded-lg text-sm font-medium text-[#374151] hover:bg-gray-50 transition-colors flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M16 12h-4m0 0H8m4 0V8m0 4v4m-4-8l8 8"></path></svg>
            切换对比模式
          </button>
          <button class="px-4 py-2 bg-[#4B5563] text-white rounded-lg text-sm font-medium hover:bg-gray-700 transition-colors">
            恢复此版本
          </button>
        </div>
      </header>

      <!-- 版本时间线 -->
      <div class="px-8 py-3 border-b border-gray-100 bg-[#F9FAFB]">
        <div class="flex items-center gap-2 overflow-x-auto pb-1 custom-scrollbar-horizontal">
          <button class="w-7 h-7 flex-shrink-0 hover:bg-gray-200 rounded-lg flex items-center justify-center transition-colors">
            <svg class="w-4 h-4 text-[#6B7280]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M15 19l-7-7 7-7"></path></svg>
          </button>
          <div class="flex gap-2">
            <div class="text-xs font-medium px-2.5 py-1 rounded-md bg-blue-100 text-blue-700 flex items-center gap-1.5 cursor-pointer flex-shrink-0">
              <svg class="w-2 h-2" fill="currentColor" viewBox="0 0 8 8"><circle cx="4" cy="4" r="4"/></svg>
              当前版本
            </div>
            <div class="text-xs font-medium px-2.5 py-1 rounded-md bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200 transition-colors flex-shrink-0">
              AI润色 • 1小时前
            </div>
            <div class="text-xs font-medium px-2.5 py-1 rounded-md bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200 transition-colors flex-shrink-0">
              手动保存 • 3小时前
            </div>
            <div class="text-xs font-medium px-2.5 py-1 rounded-md bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200 transition-colors flex-shrink-0">
              自动保存 • 5小时前
            </div>
            <div class="text-xs font-medium px-2.5 py-1 rounded-md bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200 transition-colors flex-shrink-0">
              自动保存 • 8小时前
            </div>
          </div>
          <button class="w-7 h-7 flex-shrink-0 hover:bg-gray-200 rounded-lg flex items-center justify-center transition-colors">
            <svg class="w-4 h-4 text-[#6B7280]" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg>
          </button>
        </div>
      </div>

      <div class="flex-1 p-8 overflow-y-auto custom-scrollbar">
        <div class="max-w-3xl mx-auto">
          <div class="text-[#374151] leading-relaxed text-base">
            <p>
              <del class="diff-del">控制台的警报声将卡尔文从浅眠中惊醒。</del>
              <ins class="diff-add">警报的尖啸犹如一把利刃，划破了卡尔文短暂的假寐。</ins>
              他猛地坐直，眼前的屏幕上一片红色闪烁。
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// History page logic will be implemented here
</script>

<style scoped>
.custom-scrollbar::-webkit-scrollbar {
  display: block;
  width: 6px;
  height: 6px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}

.custom-scrollbar-horizontal::-webkit-scrollbar {
  height: 4px;
}

.diff-del {
  background-color: #FEE2E2;
  text-decoration: line-through;
  text-decoration-color: #F87171;
  padding: 2px 1px;
}
.diff-add {
  background-color: #D1FAE5;
  text-decoration: none;
  padding: 2px 1px;
}
</style>

// =
// 文件: ..\src\novel\views\NovelImport.vue
//

<template>
  <div class="flex-1 px-8 py-6 overflow-auto bg-[#FCFCFC] flex items-center justify-center">
    <div class="w-full max-w-2xl bg-white rounded-xl p-8 border border-gray-100 shadow-sm">

      <!-- 文件上传区域 -->
      <div class="border-2 border-dashed border-gray-200 rounded-xl p-12 text-center hover:border-blue-400 hover:bg-gray-50/50 transition-colors cursor-pointer">
        <svg class="w-12 h-12 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" d="M7 18C4.5 18 3 16.5 3 14C3 11.5 5 10 7 10C7.3 10 7.5 10 7.8 10.1C8.5 7.2 11 5 14 5C17.3 5 20 7.7 20 11C20 11.3 20 11.7 19.9 12C21.1 12.5 22 13.6 22 15C22 16.9 20.4 18.5 18.5 18.5"/><path stroke-linecap="round" stroke-linejoin="round" d="M12 13V21M15 16L12 13L9 16"/>
        </svg>
        <h3 class="text-lg font-medium text-[#374151]">将文件拖拽至此</h3>
        <p class="text-sm text-[#6B7280] mt-1">或</p>
        <button class="mt-4 px-6 py-2.5 bg-[#4B5563] text-white rounded-lg text-sm font-medium hover:bg-[#374151] transition-colors">
          选择文件
        </button>
        <p class="text-xs text-gray-400 mt-4">支持 .txt, .docx, .md, .epub</p>
      </div>

      <!-- 导入设置区域 -->
      <div class="mt-8 text-left space-y-4 w-full">
        <h4 class="text-base font-medium text-[#374151]">导入设置</h4>
        <div class="space-y-3">
          <div class="flex items-center justify-between p-4 bg-[#F9FAFB] rounded-lg border border-gray-100">
            <div>
              <label for="auto-detect-chapters" class="text-sm font-medium text-[#374151] cursor-pointer">自动识别章节</label>
              <p class="text-xs text-[#9CA3AF] mt-1">根据常见格式自动分割章节</p>
            </div>
            <!-- 自定义 Toggle 开关 -->
            <label for="auto-detect-chapters" class="relative inline-flex items-center cursor-pointer">
              <input type="checkbox" id="auto-detect-chapters" class="sr-only peer" checked>
              <div class="w-11 h-6 bg-gray-200 rounded-full peer peer-checked:bg-[#4B5563] transition-all peer-checked:after:translate-x-full after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border after:rounded-full after:h-5 after:w-5 after:transition-all"></div>
            </label>
          </div>
          <div class="p-4 bg-[#F9FAFB] rounded-lg border border-gray-100">
            <label for="chapter-rule" class="text-sm font-medium text-[#374151] block mb-2">章节识别规则</label>
            <input type="text" id="chapter-rule" value="第.+章|Chapter \d+" class="w-full bg-white border border-gray-200 rounded-lg px-3 py-1.5 text-sm font-mono text-[#374151] focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors">
            <p class="text-xs text-[#9CA3AF] mt-2">使用正则表达式匹配章节标题</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// Import logic will be implemented here
</script>

<style scoped>
/* Scoped styles can be added here if needed */
</style>

// =
// 文件: ..\src\novel\views\NovelOutline.vue
//

// =
// 文件: ..\src\novel\views\NovelOutline.vue
//

<template>
  <div class="flex-1 flex overflow-hidden">
    <!-- 左侧大纲树 -->
    <aside class="w-80 bg-[#FAFAFA] border-r border-gray-100 p-6 flex flex-col flex-shrink-0">
      <div class="mb-4">
        <h3 class="text-sm font-medium text-[#374151] mb-3">大纲结构</h3>
        <div class="flex items-center gap-2 mb-4">
          <span class="inline-flex items-center gap-1.5 px-3 py-1 bg-blue-50 text-blue-700 rounded-full text-xs font-medium">
            <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M4 6h16M4 10h16M4 14h16M4 18h16"></path></svg>
            3卷
          </span>
          <span class="inline-flex items-center gap-1.5 px-3 py-1 bg-green-50 text-green-700 rounded-full text-xs font-medium">
             <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path></svg>
            24章
          </span>
        </div>
      </div>

      <div class="outline-tree overflow-y-auto hide-scrollbar flex-1">
        <!-- 整体大纲 -->
        <div class="tree-item" :class="{ 'active': activeSection === 'overall' }" @click="showOutlineSection('overall')">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M2 6a2 2 0 012-2h5l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"></path></svg>
          <span>整体大纲</span>
        </div>

        <!-- 卷 -->
        <div v-for="volume in outlineData" :key="volume.id" class="mt-3">
          <div class="tree-item" :class="{ 'active': activeSection === volume.id }" @click="toggleVolume(volume.id)">
            <svg class="w-4 h-4 text-gray-400 transition-transform" :class="{ 'rotate-90': volume.expanded }" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg>
            <svg class="w-4 h-4 text-orange-500" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 22V5z"></path></svg>
            <span class="font-medium">{{ volume.title }}</span>
          </div>
          <div class="tree-indent" v-show="volume.expanded">
            <div
                v-for="chapter in volume.chapters"
                :key="chapter.id"
                class="tree-item"
                :class="{ 'active': activeSection === chapter.id }"
                @click="showOutlineSection(chapter.id)">
              <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path></svg>
              <span>{{ chapter.title }}</span>
            </div>
          </div>
        </div>
      </div>
    </aside>

    <!-- 右侧编辑区 -->
    <div class="flex-1 p-8 overflow-auto hide-scrollbar bg-[#FCFCFC]">
      <div class="max-w-4xl mx-auto">
        <!-- 编辑器占位符 -->
        <div class="outline-editor p-8 bg-white rounded-xl border border-gray-200 space-y-8">
          <div v-if="activeSection === 'overall'">
            <h2 class="section-title">整体大纲</h2>
            <textarea class="outline-textarea" rows="8">《星际漫游者》是一个关于孤独、觉醒与回归的科幻故事...</textarea>
          </div>
          <div v-if="activeSection === 'vol1'">
            <h2 class="section-title">第一卷：启程</h2>
            <textarea class="outline-textarea" rows="8">第一卷主要建立故事背景和人物关系...</textarea>
          </div>
          <div v-if="activeSection === 'ch1-1'">
            <h2 class="section-title">第1章：最后的信号</h2>
            <textarea class="outline-textarea" rows="8">章节目标：建立主角李明的人物形象...</textarea>
          </div>
          <div class="text-center text-gray-400" v-if="!activeSection">
            <p>请在左侧选择一个大纲节点进行编辑</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const activeSection = ref('overall');

const outlineData = ref([
  {
    id: 'vol1',
    title: '第一卷：启程',
    expanded: true,
    chapters: [
      { id: 'ch1-1', title: '第1章：最后的信号' },
      { id: 'ch1-2', title: '第2章：艾拉' },
      { id: 'ch1-3', title: '第3章：系统异常' },
    ]
  },
  {
    id: 'vol2',
    title: '第二卷：觉醒',
    expanded: false,
    chapters: []
  },
  {
    id: 'vol3',
    title: '第三卷：归途',
    expanded: false,
    chapters: []
  },
]);

function showOutlineSection(sectionId: string) {
  activeSection.value = sectionId;
}

function toggleVolume(volumeId: string) {
  const volume = outlineData.value.find(v => v.id === volumeId);
  if (volume) {
    volume.expanded = !volume.expanded;
  }
  showOutlineSection(volumeId);
}
</script>

<style scoped>
.outline-tree .tree-item {
  cursor: pointer;
  padding: 8px 12px;
  border-radius: 8px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 14px;
  color: #374151;
}

.outline-tree .tree-item:hover {
  background: #F3F4F6;
}

.outline-tree .tree-item.active {
  background: #EFF6FF;
  color: #1D4ED8;
  font-weight: 500;
}

.outline-tree .tree-indent {
  margin-left: 24px;
  padding-left: 14px;
  border-left: 1px solid #E5E7EB;
  margin-top: 4px;
  space-y: 2px;
}

.outline-editor .section-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: #374151;
  margin-bottom: 1rem;
}

.outline-editor .outline-textarea {
  width: 100%;
  padding: 12px;
  border: 1px solid #E5E7EB;
  border-radius: 8px;
  font-size: 14px;
  line-height: 1.6;
  resize: vertical;
  background: #FAFAFA;
  transition: all 0.2s ease;
  outline: none;
}

.outline-editor .outline-textarea:focus {
  border-color: #3B82F6;
  background-color: white;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
}
</style>

// =
// 文件: ..\src\novel\views\NovelReaderView.vue
//

<template>
  <div class="h-screen w-screen bg-[#FDFCF9] text-[#3a2f2f] flex flex-col relative font-serif">
    <!-- 顶部浮动控件 -->
    <header class="w-full p-4 flex justify-between items-center absolute top-0 left-0 z-10 opacity-0 hover:opacity-100 transition-opacity duration-300">
      <router-link to="/novel/editor" class="flex items-center gap-2 px-4 py-2 text-sm font-sans font-medium bg-white/60 backdrop-blur-md rounded-lg shadow-sm border border-gray-100 text-gray-700 hover:bg-white/90 transition-colors">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M15 19l-7-7 7-7"></path></svg>
        返回编辑
      </router-link>

      <div class="flex items-center gap-1 p-1.5 bg-white/60 backdrop-blur-md rounded-lg shadow-sm border border-gray-100">
        <button class="w-10 h-8 flex items-center justify-center text-gray-600 hover:bg-gray-200/50 rounded-md transition-colors" title="目录">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" /></svg>
        </button>
        <button class="w-10 h-8 flex items-center justify-center text-gray-600 hover:bg-gray-200/50 rounded-md transition-colors" title="外观设置">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z" /></svg>
        </button>
        <button class="w-10 h-8 flex items-center justify-center text-gray-600 hover:bg-gray-200/50 rounded-md transition-colors" title="更多选项">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="1.5" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z" /></svg>
        </button>
      </div>
    </header>

    <main class="flex-1 overflow-y-auto px-4 py-8 pt-24">
      <div class="max-w-3xl mx-auto reader-content">
        <h1 class="text-center">第四章：跃迁点</h1>
        <p>控制台的警报声将卡尔文从浅眠中惊醒。他猛地坐直，眼前的屏幕上一片红色闪烁。“发现引力异常，”艾拉的声音冷静得不带一丝情感，“正在接近理论中的跃迁点。这是我们唯一的回家机会。”</p>
        <p>卡尔文的心跳漏了一拍。回家。这个词既熟悉又陌生，像一颗深埋的种子，在这一刻突然破土而出，疯狂生长。他深吸一口气，双手稳稳地放在控制杆上。“艾拉，计算跃迁参数，准备进入。”</p>
        <p>飞船轻微地震动起来，外部装甲在巨大的引力撕扯下发出呻吟。舷窗外，星辰被拉长、扭曲，汇聚成一个绚烂而致命的漩涡。漩涡的中心，是一片纯粹的黑暗，仿佛宇宙的瞳孔，凝视着这艘渺小的飞船。</p>
      </div>
    </main>

    <!-- 底部浮动控件 -->
    <footer class="w-full p-4 text-center text-sm text-gray-500/80 absolute bottom-0 left-0 z-10 opacity-0 hover:opacity-100 transition-opacity duration-300 font-sans">
      <p class="mb-2">第四章: 跃迁点</p>
      <div class="w-full max-w-sm mx-auto flex items-center gap-3">
        <button class="w-9 h-9 flex items-center justify-center text-gray-500 hover:text-gray-800 hover:bg-black/5 rounded-full transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M15 19l-7-7 7-7"></path></svg>
        </button>
        <div class="flex-1 h-1.5 bg-gray-500/10 rounded-full">
          <div class="h-1.5 bg-gray-500/60 rounded-full" style="width: 16%;"></div>
        </div>
        <button class="w-9 h-9 flex items-center justify-center text-gray-500 hover:text-gray-800 hover:bg-black/5 rounded-full transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M9 5l7 7-7 7"></path></svg>
        </button>
      </div>
      <p class="mt-2">4 / 24</p>
    </footer>
  </div>
</template>

<script setup lang="ts">

</script>

<style scoped>
@import url('https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;600&display=swap');

.reader-content h1 {
  font-family: 'Noto Serif SC', serif;
  font-size: 2.25rem; /* 36px */
  font-weight: 600;
  margin-bottom: 2.5rem;
  color: #1f2937;
  letter-spacing: 0.05em;
  padding-bottom: 1rem;
  border-bottom: 1px solid rgba(0,0,0,0.05);
}
.reader-content p {
  font-family: 'Noto Serif SC', serif;
  font-size: 1.125rem; /* 18px */
  line-height: 2.2;
  color: #374151;
  margin-bottom: 1.75rem;
  text-align: justify;
}
.font-sans {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
}
</style>

// =
// 文件: ..\src\novel\views\NovelRecent.vue
//

<template>
  <div class="flex-1 p-8 overflow-auto bg-[#FCFCFC] hide-scrollbar">
    <div class="max-w-6xl mx-auto">
      <!-- 页面标题 -->
      <div class="mb-6 pb-4 border-b border-gray-100">
        <h1 class="text-xl font-semibold text-[#374151]">最近编辑</h1>
        <p class="text-sm text-gray-500 mt-1">查看并继续您最近的工作</p>
      </div>

      <!-- 最近编辑列表 -->
      <div class="space-y-8">
        <div v-for="group in recentItems" :key="group.period">
          <h2 class="text-sm font-medium text-[#9CA3AF] mb-3 px-2">{{ group.period }}</h2>
          <div class="bg-white rounded-xl border border-gray-100 overflow-hidden">
            <ul class="divide-y divide-gray-100">
              <li
                  v-for="item in group.items"
                  :key="item.id"
                  class="p-4 flex items-center justify-between group hover:bg-gray-50/50 transition-colors"
              >
                <div class="flex items-center gap-4 flex-1 min-w-0">
                  <router-link to="/novel/editor">
                    <img :src="item.cover" class="w-10 h-14 object-cover rounded-md flex-shrink-0 shadow-sm" alt="cover">
                  </router-link>
                  <div class="flex-1 min-w-0">
                    <p class="text-sm font-medium text-[#374151] truncate">
                      <router-link to="/novel/editor" class="hover:text-blue-600">{{ item.title }}</router-link>
                    </p>
                    <p class="text-xs text-gray-500 mt-1">
                      编辑了 <span class="font-medium text-gray-600">{{ item.lastEditedChapter }}</span>
                    </p>
                  </div>
                </div>
                <div class="flex items-center gap-6">
                  <span class="text-sm text-gray-400 w-28 text-right">{{ item.lastEditedTime }}</span>
                  <div class="flex items-center gap-2 opacity-0 group-hover:opacity-100 transition-opacity">
                    <router-link to="/novel/editor" class="px-3 py-1.5 bg-[#4B5563] text-white rounded-lg text-xs font-medium hover:bg-gray-700 transition-colors">继续编辑</router-link>
                    <button class="w-8 h-8 flex items-center justify-center text-gray-500 hover:bg-gray-200 rounded-lg transition-colors">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"/></svg>
                    </button>
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const recentItems = ref([
  {
    period: '今天',
    items: [
      {
        id: 1,
        title: '星际漫游者',
        cover: 'https://images.unsplash.com/photo-1589998059171-988d887df646?q=80&w=800',
        lastEditedChapter: '第四章：跃迁点',
        lastEditedTime: '2小时前'
      },
      {
        id: 5,
        title: '红尘一梦',
        cover: 'https://images.unsplash.com/photo-1521587760476-6c12a4b040da?q=80&w=800',
        lastEditedChapter: '第五十六章：终局',
        lastEditedTime: '5小时前'
      }
    ]
  },
  {
    period: '昨天',
    items: [
      {
        id: 2,
        title: '时间之沙',
        cover: 'https://images.unsplash.com/photo-1544947950-fa07a98d237f?q=80&w=800',
        lastEditedChapter: '大纲',
        lastEditedTime: '下午 3:45'
      },
      {
        id: 1,
        title: '星际漫游者',
        cover: 'https://images.unsplash.com/photo-1589998059171-988d887df646?q=80&w=800',
        lastEditedChapter: '角色设定 - 艾拉',
        lastEditedTime: '上午 10:12'
      },
    ]
  },
]);
</script>

// =
// 文件: ..\src\novel\views\NovelSettings.vue
//

// =
// 文件: ..\src/novel/views/NovelSettings.vue
//

<template>
  <div class="flex-1 p-8 overflow-auto custom-scrollbar bg-[#FCFCFC]">
    <div class="grid grid-cols-3 gap-8 max-w-6xl mx-auto">
      <!-- 基本信息卡片 -->
      <div class="col-span-2 bg-white p-8 space-y-6 rounded-xl border border-gray-100">
        <h3 class="text-base font-medium text-[#374151]">基本信息</h3>

        <div class="space-y-2">
          <label class="text-sm font-medium text-[#374151] block">小说封面</label>
          <div class="flex items-center gap-4">
            <img src="https://images.unsplash.com/photo-1589998059171-988d887df646?q=80&w=200" class="w-24 h-32 object-cover rounded-lg shadow-sm" alt="Cover">
            <div>
              <button class="px-4 py-2 bg-white border border-gray-200 rounded-lg text-sm font-medium text-[#374151] hover:bg-gray-50 transition-colors">更换图片</button>
              <p class="text-xs text-[#9CA3AF] mt-2">JPG, PNG, GIF, 不超过 5MB</p>
            </div>
          </div>
        </div>

        <div class="space-y-2">
          <label for="novel-title" class="text-sm font-medium text-[#374151] block">小说标题</label>
          <input type="text" id="novel-title" value="星际漫游者" class="w-full text-sm px-3 py-2 bg-white border border-gray-200 rounded-lg focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
        </div>

        <div class="space-y-2">
          <label for="novel-desc" class="text-sm font-medium text-[#374151] block">小说简介</label>
          <textarea id="novel-desc" rows="4" class="w-full text-sm px-3 py-2 bg-white border border-gray-200 rounded-lg focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition resize-none">一部关于孤独宇航员在未知星系中寻找回家之路的科幻史诗。</textarea>
        </div>

        <div class="grid grid-cols-2 gap-6">
          <div class="space-y-2">
            <label class="text-sm font-medium text-[#374151] block">类型标签</label>
            <div class="flex flex-wrap gap-2 items-center">
              <div class="flex items-center gap-1.5 px-2.5 py-1 text-sm bg-blue-50 text-blue-700 rounded-full">
                <span>科幻</span>
                <button class="text-blue-500 hover:text-blue-700">
                  <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
              </div>
              <div class="flex items-center gap-1.5 px-2.5 py-1 text-sm bg-green-50 text-green-700 rounded-full">
                <span>冒险</span>
                <button class="text-green-500 hover:text-green-700">
                  <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
              </div>
              <button class="px-3 py-1 bg-gray-100 hover:bg-gray-200 text-[#6B7280] rounded-full text-sm font-medium transition-colors">+ 添加</button>
            </div>
          </div>

          <div class="space-y-2">
            <label class="text-sm font-medium text-[#374151] block">创作状态</label>
            <select class="w-full text-sm px-3 py-2 bg-white border border-gray-200 rounded-lg focus:ring-1 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
              <option>连载中</option>
              <option>已完结</option>
              <option>暂停更新</option>
            </select>
          </div>
        </div>

        <div class="pt-6 border-t border-gray-100 flex justify-end gap-3">
          <button class="px-5 py-2 bg-white border border-gray-200 rounded-lg text-sm font-medium text-[#374151] hover:bg-gray-50 transition-colors">取消</button>
          <button class="px-5 py-2 bg-[#4B5563] hover:bg-gray-700 text-white rounded-lg text-sm font-medium transition-colors">保存更改</button>
        </div>
      </div>

      <!-- 参考内容管理卡片 -->
      <div class="col-span-1 space-y-6">
        <div class="bg-white p-6 rounded-xl border border-gray-100">
          <h3 class="text-base font-medium text-[#374151]">参考内容管理</h3>
          <p class="text-sm text-[#9CA3AF] mt-1 mb-4">将其他作品作为参考，AI会借鉴其风格</p>

          <div class="space-y-3">
            <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg border border-gray-200">
              <div class="flex items-center gap-3 overflow-hidden">
                <img src="https://images.unsplash.com/photo-1532012197267-da84d127e765?q=80&w=100" class="w-8 h-10 object-cover rounded flex-shrink-0" alt="Reference Book">
                <span class="text-sm font-medium text-[#374151] truncate">银河帝国</span>
              </div>
              <button class="text-gray-400 hover:text-red-500 transition-colors flex-shrink-0 p-1">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M6 18L18 6M6 6l12 12"></path></svg>
              </button>
            </div>
          </div>

          <button class="w-full mt-4 flex items-center justify-center gap-2 border-2 border-dashed border-gray-200 rounded-lg py-4 text-sm font-medium text-[#9CA3AF] hover:border-blue-500 hover:text-blue-500 transition-all">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M12 4v16m8-8H4"></path></svg>
            <span>添加参考作品</span>
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// Component logic can be added here
</script>

<style scoped>
.custom-scrollbar::-webkit-scrollbar {
  display: block;
  width: 6px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #d1d5db;
  border-radius: 3px;
}
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #9ca3af;
}
</style>

// =
// 文件: ..\src\novel\views\NovelTrash.vue
//

// =
// 文件: ..\src\novel\views\NovelTrash.vue
//

<template>
  <div class="flex-1 p-8 overflow-auto bg-[#FCFCFC] hide-scrollbar">
    <!-- 提示信息栏 -->
    <div class="flex justify-between items-center mb-6 p-4 bg-blue-50 border border-blue-100 rounded-lg">
      <p class="text-sm text-blue-800 flex items-center gap-2">
        <svg class="w-5 h-5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg>
        项目将在回收站中保留30天，之后将被永久删除。
      </p>
      <button class="flex items-center gap-2 px-3 py-1.5 text-sm font-medium bg-red-100 text-red-700 rounded-md hover:bg-red-200 transition-colors">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M19 21H5a2 2 0 01-2-2V7h18v12a2 2 0 01-2 2zM3 7h18M10 12v4M14 12v4M8 7V4a1 1 0 011-1h6a1 1 0 011 1v3"/></svg>
        清空回收站
      </button>
    </div>

    <!-- 表格容器 -->
    <div class="bg-white rounded-xl border border-gray-100 overflow-hidden">
      <table class="w-full text-sm text-left">
        <thead class="text-xs text-[#6B7280] uppercase bg-gray-50">
        <tr>
          <th scope="col" class="px-6 py-3 font-medium w-2/5">项目名称</th>
          <th scope="col" class="px-6 py-3 font-medium">类型</th>
          <th scope="col" class="px-6 py-3 font-medium">删除时间</th>
          <th scope="col" class="px-6 py-3 font-medium">剩余时间</th>
          <th scope="col" class="px-6 py-3 font-medium text-right">操作</th>
        </tr>
        </thead>
        <tbody class="divide-y divide-gray-100">
        <tr v-for="item in deletedItems" :key="item.id" class="hover:bg-gray-50/50 transition-colors">
          <td class="px-6 py-4 font-medium text-[#374151] flex items-center gap-3">
            <span class="text-gray-400 w-5 h-5 flex-shrink-0" v-html="item.icon"></span>
            <span>{{ item.name }}</span>
          </td>
          <td class="px-6 py-4 text-[#6B7280]">{{ item.type }}</td>
          <td class="px-6 py-4 text-[#6B7280]">{{ item.deletedAt }}</td>
          <td class="px-6 py-4">
            <div class="flex items-center gap-3">
              <div class="w-full bg-gray-200 rounded-full h-1.5">
                <div class="bg-orange-400 h-1.5 rounded-full" :style="{ width: item.retentionPercent + '%' }"></div>
              </div>
              <span class="text-orange-500 text-xs font-medium w-16 text-right">{{ item.retentionDays }} 天</span>
            </div>
          </td>
          <td class="px-6 py-4 text-right space-x-4">
            <button class="font-medium text-blue-600 hover:text-blue-800 transition-colors">恢复</button>
            <button class="font-medium text-red-600 hover:text-red-800 transition-colors">永久删除</button>
          </td>
        </tr>
        </tbody>
      </table>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref } from 'vue';

const deletedItems = ref([
  {
    id: 1,
    name: '废弃的赛博朋克大纲',
    type: '小说',
    icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M4 19.5A2.5 2.5 0 016.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 014 19.5v-15A2.5 2.5 0 016.5 2z"></path></svg>`,
    deletedAt: '2024-05-20 14:30',
    retentionDays: 28,
    retentionPercent: 93,
  },
  {
    id: 2,
    name: '一个短篇故事',
    type: '章节',
    icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M14 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline></svg>`,
    deletedAt: '2024-05-18 09:12',
    retentionDays: 26,
    retentionPercent: 87,
  },
  {
    id: 3,
    name: '无题角色设定',
    type: '角色',
    icon: `<svg fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M17 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2"/><circle cx="9" cy="7" r="4"/><path d="M23 21v-2a4 4 0 00-3-3.87M16 3.13a4 4 0 010 7.75"/></svg>`,
    deletedAt: '2024-05-15 22:01',
    retentionDays: 23,
    retentionPercent: 76,
  },
]);
</script>

<style scoped>
/* Scoped styles can be added here if needed, but Tailwind CSS covers most cases. */
</style>

// =
// 文件: ..\src\novel\views\NovelWorldview.vue
//

// =
// 文件: ..\src/novel/views/NovelWorldview.vue
//

<template>
  <div class="flex-1 px-8 py-6 overflow-auto bg-[#FCFCFC] hide-scrollbar">
    <div class="space-y-8 max-w-7xl mx-auto">
      <!-- 分类: 地点 -->
      <div>
        <div class="flex items-center gap-3 mb-4">
          <div class="w-8 h-8 bg-blue-100 text-blue-600 rounded-lg flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z"></path><circle cx="12" cy="10" r="3"></circle></svg>
          </div>
          <h2 class="text-base font-medium text-[#374151]">地点</h2>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <!-- 现有卡片 -->
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:border-gray-200 transition-all hover:shadow-sm cursor-pointer">
            <h3 class="font-medium text-[#374151] mb-1">探索者四号</h3>
            <p class="text-sm text-[#9CA3AF] line-clamp-2">主角所在的深空探测飞船，配备了实验性的“艾拉”AI系统和基础的生态循环模块。</p>
            <div class="mt-4 text-xs text-gray-400">更新于：2天前</div>
          </div>
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:border-gray-200 transition-all hover:shadow-sm cursor-pointer">
            <h3 class="font-medium text-[#374151] mb-1">跃迁点</h3>
            <p class="text-sm text-[#9CA3AF] line-clamp-2">一种罕见的宇宙弦理论现象，被认为是超光速旅行的唯一可能通道，但极度不稳定。</p>
            <div class="mt-4 text-xs text-gray-400">更新于：1小时前</div>
          </div>
        </div>
      </div>

      <!-- 分类: 技术 -->
      <div>
        <div class="flex items-center gap-3 mb-4">
          <div class="w-8 h-8 bg-indigo-100 text-indigo-600 rounded-lg flex items-center justify-center flex-shrink-0">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M5 12h14M12 5l7 7-7 7"></path></svg>
          </div>
          <h2 class="text-base font-medium text-[#374151]">技术</h2>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:border-gray-200 transition-all hover:shadow-sm cursor-pointer">
            <h3 class="font-medium text-[#374151] mb-1">再生咖啡</h3>
            <p class="text-sm text-[#9CA3AF] line-clamp-2">飞船内物质循环系统的产物，味道苦涩，但能提供必要的咖啡因和微量元素。</p>
            <div class="mt-4 text-xs text-gray-400">更新于：5天前</div>
          </div>
          <div class="bg-white rounded-xl p-6 border border-gray-100 hover:border-gray-200 transition-all hover:shadow-sm cursor-pointer">
            <h3 class="font-medium text-[#374151] mb-1">艾拉AI系统</h3>
            <p class="text-sm text-[#9CA3AF] line-clamp-2">第五代通用人工智能，负责飞船的全部操作。其逻辑核心被设定为“确保任务完成”，有时会与船员的生存需求产生冲突。</p>
            <div class="mt-4 text-xs text-gray-400">更新于：2天前</div>
          </div>
          <!-- 添加新设定的占位符卡片 -->
          <button class="bg-white rounded-xl p-6 border border-dashed border-gray-200 hover:border-blue-400 transition-all hover:shadow-sm text-left group flex flex-col items-center justify-center text-gray-500 hover:text-blue-600">
            <div class="w-12 h-12 rounded-xl bg-gray-100 group-hover:bg-blue-50 flex items-center justify-center mb-4 group-hover:scale-105 transition-transform">
              <svg class="w-6 h-6" stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24"><path d="M12 5V19M5 12H19"/></svg>
            </div>
            <h4 class="font-medium text-[#374151] mb-1">新建设定</h4>
            <p class="text-sm text-[#9CA3AF]">为此分类添加新条目</p>
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
// Component logic can be added here
</script>

<style scoped>
.line-clamp-2 {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
}
</style>

